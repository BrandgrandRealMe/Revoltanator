{"version":3,"file":"Edge11.js","sourceRoot":"","sources":["../../src/handlers/Edge11.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from '../Logger';\nimport { UnsupportedError } from '../errors';\nimport * as utils from '../utils';\nimport * as ortc from '../ortc';\nimport * as edgeUtils from './ortc/edgeUtils';\nimport {\n\tHandlerFactory,\n\tHandlerInterface,\n\tHandlerRunOptions,\n\tHandlerSendOptions,\n\tHandlerSendResult,\n\tHandlerReceiveOptions,\n\tHandlerReceiveResult,\n\tHandlerSendDataChannelOptions,\n\tHandlerSendDataChannelResult,\n\tHandlerReceiveDataChannelOptions,\n\tHandlerReceiveDataChannelResult\n} from './HandlerInterface';\nimport {\n\tIceParameters,\n\tIceCandidate,\n\tDtlsParameters,\n\tDtlsRole\n} from '../Transport';\nimport { RtpCapabilities, RtpParameters } from '../RtpParameters';\nimport { SctpCapabilities } from '../SctpParameters';\n\nconst logger = new Logger('Edge11');\n\nexport class Edge11 extends HandlerInterface\n{\n\t// Generic sending RTP parameters for audio and video.\n\tprivate _sendingRtpParametersByKind?: { [key: string]: RtpParameters };\n\t// Transport remote ICE parameters.\n\tprivate _remoteIceParameters?: IceParameters;\n\t// Transport remote ICE candidates.\n\tprivate _remoteIceCandidates?: IceCandidate[];\n\t// Transport remote DTLS parameters.\n\tprivate _remoteDtlsParameters?: DtlsParameters;\n\t// ICE gatherer.\n\tprivate _iceGatherer?: any;\n\t// ICE transport.\n\tprivate _iceTransport?: any;\n\t// DTLS transport.\n\tprivate _dtlsTransport?: any;\n\t// Map of RTCRtpSenders indexed by id.\n\tprivate readonly _rtpSenders: Map<string, RTCRtpSender> = new Map();\n\t// Map of RTCRtpReceivers indexed by id.\n\tprivate readonly _rtpReceivers: Map<string, RTCRtpReceiver> = new Map();\n\t// Next localId for sending tracks.\n\tprivate _nextSendLocalId = 0;\n\t// Local RTCP CNAME.\n\tprivate _cname?: string;\n\t// Got transport local and remote parameters.\n\tprivate _transportReady = false;\n\n\t/**\n\t * Creates a factory function.\n\t */\n\tstatic createFactory(): HandlerFactory\n\t{\n\t\treturn (): Edge11 => new Edge11();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tget name(): string\n\t{\n\t\treturn 'Edge11';\n\t}\n\n\tclose(): void\n\t{\n\t\tlogger.debug('close()');\n\n\t\t// Close the ICE gatherer.\n\t\t// NOTE: Not yet implemented by Edge.\n\t\ttry { this._iceGatherer.close(); }\n\t\tcatch (error) {}\n\n\t\t// Close the ICE transport.\n\t\ttry { this._iceTransport.stop(); }\n\t\tcatch (error) {}\n\n\t\t// Close the DTLS transport.\n\t\ttry { this._dtlsTransport.stop(); }\n\t\tcatch (error) {}\n\n\t\t// Close RTCRtpSenders.\n\t\tfor (const rtpSender of this._rtpSenders.values())\n\t\t{\n\t\t\ttry { (rtpSender as any).stop(); }\n\t\t\tcatch (error) {}\n\t\t}\n\n\t\t// Close RTCRtpReceivers.\n\t\tfor (const rtpReceiver of this._rtpReceivers.values())\n\t\t{\n\t\t\ttry { (rtpReceiver as any).stop(); }\n\t\t\tcatch (error) {}\n\t\t}\n\t}\n\n\tasync getNativeRtpCapabilities(): Promise<RtpCapabilities>\n\t{\n\t\tlogger.debug('getNativeRtpCapabilities()');\n\n\t\treturn edgeUtils.getCapabilities();\n\t}\n\n\tasync getNativeSctpCapabilities(): Promise<SctpCapabilities>\n\t{\n\t\tlogger.debug('getNativeSctpCapabilities()');\n\n\t\treturn {\n\t\t\tnumStreams : { OS: 0, MIS: 0 }\n\t\t};\n\t}\n\n\trun(\n\t\t{\n\t\t\tdirection, // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\ticeParameters,\n\t\t\ticeCandidates,\n\t\t\tdtlsParameters,\n\t\t\tsctpParameters, // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\ticeServers,\n\t\t\ticeTransportPolicy,\n\t\t\tadditionalSettings, // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\tproprietaryConstraints, // eslint-disable-line @typescript-eslint/no-unused-vars\n\t\t\textendedRtpCapabilities\n\t\t}: HandlerRunOptions\n\t): void\n\t{\n\t\tlogger.debug('run()');\n\n\t\tthis._sendingRtpParametersByKind =\n\t\t{\n\t\t\taudio : ortc.getSendingRtpParameters('audio', extendedRtpCapabilities),\n\t\t\tvideo : ortc.getSendingRtpParameters('video', extendedRtpCapabilities)\n\t\t};\n\n\t\tthis._remoteIceParameters = iceParameters;\n\t\tthis._remoteIceCandidates = iceCandidates;\n\t\tthis._remoteDtlsParameters = dtlsParameters;\n\t\tthis._cname = `CNAME-${utils.generateRandomNumber()}`;\n\n\t\tthis._setIceGatherer({ iceServers, iceTransportPolicy });\n\t\tthis._setIceTransport();\n\t\tthis._setDtlsTransport();\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tasync updateIceServers(iceServers: RTCIceServer[]): Promise<void>\n\t{\n\t\t// NOTE: Edge 11 does not implement iceGatherer.gater().\n\t\tthrow new UnsupportedError('not supported');\n\t}\n\n\tasync restartIce(iceParameters: IceParameters): Promise<void>\n\t{\n\t\tlogger.debug('restartIce()');\n\n\t\tthis._remoteIceParameters = iceParameters;\n\n\t\tif (!this._transportReady)\n\t\t\treturn;\n\n\t\tlogger.debug('restartIce() | calling iceTransport.start()');\n\n\t\tthis._iceTransport.start(\n\t\t\tthis._iceGatherer, iceParameters, 'controlling');\n\n\t\tfor (const candidate of this._remoteIceCandidates!)\n\t\t{\n\t\t\tthis._iceTransport.addRemoteCandidate(candidate);\n\t\t}\n\n\t\tthis._iceTransport.addRemoteCandidate({});\n\t}\n\n\tasync getTransportStats(): Promise<RTCStatsReport>\n\t{\n\t\treturn this._iceTransport.getStats();\n\t}\n\n\tasync send(\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t{ track, encodings, codecOptions, codec }: HandlerSendOptions\n\t): Promise<HandlerSendResult>\n\t{\n\t\tlogger.debug('send() [kind:%s, track.id:%s]', track.kind, track.id);\n\n\t\tif (!this._transportReady)\n\t\t\tawait this._setupTransport({ localDtlsRole: 'server' });\n\n\t\tlogger.debug('send() | calling new RTCRtpSender()');\n\n\t\tconst rtpSender = new (RTCRtpSender as any)(track, this._dtlsTransport);\n\t\tconst rtpParameters =\n\t\t\tutils.clone(this._sendingRtpParametersByKind![track.kind], {});\n\n\t\trtpParameters.codecs = ortc.reduceCodecs(rtpParameters.codecs, codec);\n\n\t\tconst useRtx = rtpParameters.codecs\n\t\t\t.some((_codec: any) => /.+\\/rtx$/i.test(_codec.mimeType));\n\n\t\tif (!encodings)\n\t\t\tencodings = [ {} ];\n\n\t\tfor (const encoding of encodings)\n\t\t{\n\t\t\tencoding.ssrc = utils.generateRandomNumber();\n\n\t\t\tif (useRtx)\n\t\t\t\tencoding.rtx = { ssrc: utils.generateRandomNumber() };\n\t\t}\n\n\t\trtpParameters.encodings = encodings;\n\n\t\t// Fill RTCRtpParameters.rtcp.\n\t\trtpParameters.rtcp =\n\t\t{\n\t\t\tcname       : this._cname!,\n\t\t\treducedSize : true,\n\t\t\tmux         : true\n\t\t};\n\n\t\t// NOTE: Convert our standard RTCRtpParameters into those that Edge\n\t\t// expects.\n\t\tconst edgeRtpParameters = edgeUtils.mangleRtpParameters(rtpParameters);\n\n\t\tlogger.debug(\n\t\t\t'send() | calling rtpSender.send() [params:%o]',\n\t\t\tedgeRtpParameters);\n\n\t\tawait rtpSender.send(edgeRtpParameters);\n\n\t\tconst localId = String(this._nextSendLocalId);\n\n\t\tthis._nextSendLocalId++;\n\n\t\t// Store it.\n\t\tthis._rtpSenders.set(localId, rtpSender);\n\n\t\treturn { localId, rtpParameters, rtpSender };\n\t}\n\n\tasync stopSending(localId: string): Promise<void>\n\t{\n\t\tlogger.debug('stopSending() [localId:%s]', localId);\n\n\t\tconst rtpSender = this._rtpSenders.get(localId);\n\n\t\tif (!rtpSender)\n\t\t\tthrow new Error('RTCRtpSender not found');\n\n\t\tthis._rtpSenders.delete(localId);\n\n\t\ttry\n\t\t{\n\t\t\tlogger.debug('stopSending() | calling rtpSender.stop()');\n\n\t\t\t(rtpSender as any).stop();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tlogger.warn('stopSending() | rtpSender.stop() failed:%o', error);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync replaceTrack(\n\t\tlocalId: string, track: MediaStreamTrack | null\n\t): Promise<void>\n\t{\n\t\tif (track)\n\t\t{\n\t\t\tlogger.debug(\n\t\t\t\t'replaceTrack() [localId:%s, track.id:%s]', localId, track.id);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlogger.debug('replaceTrack() [localId:%s, no track]', localId);\n\t\t}\n\n\t\tconst rtpSender = this._rtpSenders.get(localId);\n\n\t\tif (!rtpSender)\n\t\t\tthrow new Error('RTCRtpSender not found');\n\n\t\t(rtpSender as any).setTrack(track);\n\t}\n\n\tasync setMaxSpatialLayer(localId: string, spatialLayer: number): Promise<void>\n\t{\n\t\tlogger.debug(\n\t\t\t'setMaxSpatialLayer() [localId:%s, spatialLayer:%s]',\n\t\t\tlocalId, spatialLayer);\n\n\t\tconst rtpSender = this._rtpSenders.get(localId);\n\n\t\tif (!rtpSender)\n\t\t\tthrow new Error('RTCRtpSender not found');\n\n\t\tconst parameters = rtpSender.getParameters();\n\n\t\tparameters.encodings\n\t\t\t.forEach((encoding, idx) =>\n\t\t\t{\n\t\t\t\tif (idx <= spatialLayer)\n\t\t\t\t\tencoding.active = true;\n\t\t\t\telse\n\t\t\t\t\tencoding.active = false;\n\t\t\t});\n\n\t\tawait rtpSender.setParameters(parameters);\n\t}\n\n\tasync setRtpEncodingParameters(localId: string, params: any): Promise<void>\n\t{\n\t\tlogger.debug(\n\t\t\t'setRtpEncodingParameters() [localId:%s, params:%o]',\n\t\t\tlocalId, params);\n\n\t\tconst rtpSender = this._rtpSenders.get(localId);\n\n\t\tif (!rtpSender)\n\t\t\tthrow new Error('RTCRtpSender not found');\n\n\t\tconst parameters = rtpSender.getParameters();\n\n\t\tparameters.encodings.forEach((encoding: any, idx: number) =>\n\t\t{\n\t\t\tparameters.encodings[idx] = { ...encoding, ...params };\n\t\t});\n\n\t\tawait rtpSender.setParameters(parameters);\n\t}\n\n\tasync getSenderStats(localId: string): Promise<RTCStatsReport>\n\t{\n\t\tconst rtpSender = this._rtpSenders.get(localId);\n\n\t\tif (!rtpSender)\n\t\t\tthrow new Error('RTCRtpSender not found');\n\n\t\treturn rtpSender.getStats();\n\t}\n\n\tasync sendDataChannel(\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\toptions: HandlerSendDataChannelOptions\n\t): Promise<HandlerSendDataChannelResult>\n\t{\n\t\tthrow new UnsupportedError('not implemented');\n\t}\n\n\tasync receive(\n\t\t{ trackId, kind, rtpParameters }: HandlerReceiveOptions\n\t): Promise<HandlerReceiveResult>\n\t{\n\t\tlogger.debug('receive() [trackId:%s, kind:%s]', trackId, kind);\n\n\t\tif (!this._transportReady)\n\t\t\tawait this._setupTransport({ localDtlsRole: 'server' });\n\n\t\tlogger.debug('receive() | calling new RTCRtpReceiver()');\n\n\t\tconst rtpReceiver = new (RTCRtpReceiver as any)(this._dtlsTransport, kind);\n\n\t\trtpReceiver.addEventListener('error', (event: any) =>\n\t\t{\n\t\t\tlogger.error('rtpReceiver \"error\" event [event:%o]', event);\n\t\t});\n\n\t\t// NOTE: Convert our standard RTCRtpParameters into those that Edge\n\t\t// expects.\n\t\tconst edgeRtpParameters =\n\t\t\tedgeUtils.mangleRtpParameters(rtpParameters);\n\n\t\tlogger.debug(\n\t\t\t'receive() | calling rtpReceiver.receive() [params:%o]',\n\t\t\tedgeRtpParameters);\n\n\t\tawait rtpReceiver.receive(edgeRtpParameters);\n\n\t\tconst localId = trackId;\n\n\t\t// Store it.\n\t\tthis._rtpReceivers.set(localId, rtpReceiver);\n\n\t\treturn {\n\t\t\tlocalId,\n\t\t\ttrack : rtpReceiver.track,\n\t\t\trtpReceiver\n\t\t};\n\t}\n\n\tasync stopReceiving(localId: string): Promise<void>\n\t{\n\t\tlogger.debug('stopReceiving() [localId:%s]', localId);\n\n\t\tconst rtpReceiver = this._rtpReceivers.get(localId);\n\n\t\tif (!rtpReceiver)\n\t\t\tthrow new Error('RTCRtpReceiver not found');\n\n\t\tthis._rtpReceivers.delete(localId);\n\n\t\ttry\n\t\t{\n\t\t\tlogger.debug('stopReceiving() | calling rtpReceiver.stop()');\n\n\t\t\t(rtpReceiver as any).stop();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tlogger.warn('stopReceiving() | rtpReceiver.stop() failed:%o', error);\n\t\t}\n\t}\n\n\tasync getReceiverStats(localId: string): Promise<RTCStatsReport>\n\t{\n\t\tconst rtpReceiver = this._rtpReceivers.get(localId);\n\n\t\tif (!rtpReceiver)\n\t\t\tthrow new Error('RTCRtpReceiver not found');\n\n\t\treturn rtpReceiver.getStats();\n\t}\n\n\tasync receiveDataChannel(\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\toptions: HandlerReceiveDataChannelOptions\n\t): Promise<HandlerReceiveDataChannelResult>\n\t{\n\t\tthrow new UnsupportedError('not implemented');\n\t}\n\n\tprivate _setIceGatherer(\n\t\t{ iceServers, iceTransportPolicy }:\n\t\t{ iceServers?: any[]; iceTransportPolicy?: RTCIceTransportPolicy }\n\t): void\n\t{\n\t\tconst iceGatherer = new (RTCIceGatherer as any)(\n\t\t\t{\n\t\t\t\ticeServers   : iceServers || [],\n\t\t\t\tgatherPolicy : iceTransportPolicy || 'all'\n\t\t\t});\n\n\t\ticeGatherer.addEventListener('error', (event: any) =>\n\t\t{\n\t\t\tlogger.error('iceGatherer \"error\" event [event:%o]', event);\n\t\t});\n\n\t\t// NOTE: Not yet implemented by Edge, which starts gathering automatically.\n\t\ttry\n\t\t{\n\t\t\ticeGatherer.gather();\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tlogger.debug(\n\t\t\t\t'_setIceGatherer() | iceGatherer.gather() failed: %s', error.toString());\n\t\t}\n\n\t\tthis._iceGatherer = iceGatherer;\n\t}\n\n\tprivate _setIceTransport(): void\n\t{\n\t\tconst iceTransport = new (RTCIceTransport as any)(this._iceGatherer);\n\n\t\t// NOTE: Not yet implemented by Edge.\n\t\ticeTransport.addEventListener('statechange', () =>\n\t\t{\n\t\t\tswitch (iceTransport.state)\n\t\t\t{\n\t\t\t\tcase 'checking':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'connecting');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'connected':\n\t\t\t\tcase 'completed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'connected');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'failed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'failed');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disconnected':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'disconnected');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'closed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'closed');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t// NOTE: Not standard, but implemented by Edge.\n\t\ticeTransport.addEventListener('icestatechange', () =>\n\t\t{\n\t\t\tswitch (iceTransport.state)\n\t\t\t{\n\t\t\t\tcase 'checking':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'connecting');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'connected':\n\t\t\t\tcase 'completed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'connected');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'failed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'failed');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disconnected':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'disconnected');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'closed':\n\t\t\t\t\tthis.emit('@connectionstatechange', 'closed');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\ticeTransport.addEventListener('candidatepairchange', (event: any) =>\n\t\t{\n\t\t\tlogger.debug(\n\t\t\t\t'iceTransport \"candidatepairchange\" event [pair:%o]', event.pair);\n\t\t});\n\n\t\tthis._iceTransport = iceTransport;\n\t}\n\n\tprivate _setDtlsTransport(): void\n\t{\n\t\tconst dtlsTransport = new (RTCDtlsTransport as any)(this._iceTransport);\n\n\t\t// NOTE: Not yet implemented by Edge.\n\t\tdtlsTransport.addEventListener('statechange', () =>\n\t\t{\n\t\t\tlogger.debug(\n\t\t\t\t'dtlsTransport \"statechange\" event [state:%s]', dtlsTransport.state);\n\t\t});\n\n\t\t// NOTE: Not standard, but implemented by Edge.\n\t\tdtlsTransport.addEventListener('dtlsstatechange', () =>\n\t\t{\n\t\t\tlogger.debug(\n\t\t\t\t'dtlsTransport \"dtlsstatechange\" event [state:%s]', dtlsTransport.state);\n\n\t\t\tif (dtlsTransport.state === 'closed')\n\t\t\t\tthis.emit('@connectionstatechange', 'closed');\n\t\t});\n\n\t\tdtlsTransport.addEventListener('error', (event: any) =>\n\t\t{\n\t\t\tlogger.error('dtlsTransport \"error\" event [event:%o]', event);\n\t\t});\n\n\t\tthis._dtlsTransport = dtlsTransport;\n\t}\n\n\tprivate async _setupTransport(\n\t\t{ localDtlsRole }:\n\t\t{ localDtlsRole: DtlsRole }\n\t): Promise<void>\n\t{\n\t\tlogger.debug('_setupTransport()');\n\n\t\t// Get our local DTLS parameters.\n\t\tconst dtlsParameters = this._dtlsTransport.getLocalParameters();\n\n\t\tdtlsParameters.role = localDtlsRole;\n\n\t\t// Need to tell the remote transport about our parameters.\n\t\tawait this.safeEmitAsPromise('@connect', { dtlsParameters });\n\n\t\t// Start the RTCIceTransport.\n\t\tthis._iceTransport.start(\n\t\t\tthis._iceGatherer, this._remoteIceParameters, 'controlling');\n\n\t\t// Add remote ICE candidates.\n\t\tfor (const candidate of this._remoteIceCandidates!)\n\t\t{\n\t\t\tthis._iceTransport.addRemoteCandidate(candidate);\n\t\t}\n\n\t\t// Also signal a 'complete' candidate as per spec.\n\t\t// NOTE: It should be {complete: true} but Edge prefers {}.\n\t\t// NOTE: If we don't signal end of candidates, the Edge RTCIceTransport\n\t\t// won't enter the 'completed' state.\n\t\tthis._iceTransport.addRemoteCandidate({});\n\n\t\t// NOTE: Edge does not like SHA less than 256.\n\t\tthis._remoteDtlsParameters!.fingerprints = this._remoteDtlsParameters!.fingerprints\n\t\t\t.filter((fingerprint: any) =>\n\t\t\t{\n\t\t\t\treturn (\n\t\t\t\t\tfingerprint.algorithm === 'sha-256' ||\n\t\t\t\t\tfingerprint.algorithm === 'sha-384' ||\n\t\t\t\t\tfingerprint.algorithm === 'sha-512'\n\t\t\t\t);\n\t\t\t});\n\n\t\t// Start the RTCDtlsTransport.\n\t\tthis._dtlsTransport.start(this._remoteDtlsParameters);\n\n\t\tthis._transportReady = true;\n\t}\n}\n"]}