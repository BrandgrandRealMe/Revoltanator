{"version":3,"file":"planBUtils.js","sourceRoot":"","sources":["../../../src/handlers/sdp/planBUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { RtpEncodingParameters } from '../../RtpParameters';\n\nexport function getRtpEncodings(\n\t{\n\t\tofferMediaObject,\n\t\ttrack\n\t}:\n\t{\n\t\tofferMediaObject: any;\n\t\ttrack: MediaStreamTrack;\n\t}\n): RtpEncodingParameters[]\n{\n\t// First media SSRC (or the only one).\n\tlet firstSsrc;\n\tconst ssrcs = new Set();\n\n\tfor (const line of offerMediaObject.ssrcs || [])\n\t{\n\t\tif (line.attribute !== 'msid')\n\t\t\tcontinue;\n\n\t\tconst trackId = line.value.split(' ')[1];\n\n\t\tif (trackId === track.id)\n\t\t{\n\t\t\tconst ssrc = line.id;\n\n\t\t\tssrcs.add(ssrc);\n\n\t\t\tif (!firstSsrc)\n\t\t\t\tfirstSsrc = ssrc;\n\t\t}\n\t}\n\n\tif (ssrcs.size === 0)\n\t\tthrow new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n\n\tconst ssrcToRtxSsrc = new Map();\n\n\t// First assume RTX is used.\n\tfor (const line of offerMediaObject.ssrcGroups || [])\n\t{\n\t\tif (line.semantics !== 'FID')\n\t\t\tcontinue;\n\n\t\tlet [ ssrc, rtxSsrc ] = line.ssrcs.split(/\\s+/);\n\n\t\tssrc = Number(ssrc);\n\t\trtxSsrc = Number(rtxSsrc);\n\n\t\tif (ssrcs.has(ssrc))\n\t\t{\n\t\t\t// Remove both the SSRC and RTX SSRC from the set so later we know that they\n\t\t\t// are already handled.\n\t\t\tssrcs.delete(ssrc);\n\t\t\tssrcs.delete(rtxSsrc);\n\n\t\t\t// Add to the map.\n\t\t\tssrcToRtxSsrc.set(ssrc, rtxSsrc);\n\t\t}\n\t}\n\n\t// If the set of SSRCs is not empty it means that RTX is not being used, so take\n\t// media SSRCs from there.\n\tfor (const ssrc of ssrcs)\n\t{\n\t\t// Add to the map.\n\t\tssrcToRtxSsrc.set(ssrc, null);\n\t}\n\n\tconst encodings: RtpEncodingParameters[] = [];\n\n\tfor (const [ ssrc, rtxSsrc ] of ssrcToRtxSsrc)\n\t{\n\t\tconst encoding: any = { ssrc };\n\n\t\tif (rtxSsrc)\n\t\t\tencoding.rtx = { ssrc: rtxSsrc };\n\n\t\tencodings.push(encoding);\n\t}\n\n\treturn encodings;\n}\n\n/**\n * Adds multi-ssrc based simulcast into the given SDP media section offer.\n */\nexport function addLegacySimulcast(\n\t{\n\t\tofferMediaObject,\n\t\ttrack,\n\t\tnumStreams\n\t}:\n\t{\n\t\tofferMediaObject: any;\n\t\ttrack: MediaStreamTrack;\n\t\tnumStreams: number;\n\t}\n): void\n{\n\tif (numStreams <= 1)\n\t\tthrow new TypeError('numStreams must be greater than 1');\n\n\tlet firstSsrc: any;\n\tlet firstRtxSsrc: any;\n\tlet streamId: any;\n\n\t// Get the SSRC.\n\tconst ssrcMsidLine = (offerMediaObject.ssrcs || [])\n\t\t.find((line: any) =>\n\t\t{\n\t\t\tif (line.attribute !== 'msid')\n\t\t\t\treturn false;\n\n\t\t\tconst trackId = line.value.split(' ')[1];\n\n\t\t\tif (trackId === track.id)\n\t\t\t{\n\t\t\t\tfirstSsrc = line.id;\n\t\t\t\tstreamId = line.value.split(' ')[0];\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\tif (!ssrcMsidLine)\n\t\tthrow new Error(`a=ssrc line with msid information not found [track.id:${track.id}]`);\n\n\t// Get the SSRC for RTX.\n\t(offerMediaObject.ssrcGroups || [])\n\t\t.some((line: any) =>\n\t\t{\n\t\t\tif (line.semantics !== 'FID')\n\t\t\t\treturn false;\n\n\t\t\tconst ssrcs = line.ssrcs.split(/\\s+/);\n\n\t\t\tif (Number(ssrcs[0]) === firstSsrc)\n\t\t\t{\n\t\t\t\tfirstRtxSsrc = Number(ssrcs[1]);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\tconst ssrcCnameLine = offerMediaObject.ssrcs\n\t\t.find((line: any) => (line.attribute === 'cname' && line.id === firstSsrc));\n\n\tif (!ssrcCnameLine)\n\t\tthrow new Error(`a=ssrc line with cname information not found [track.id:${track.id}]`);\n\n\tconst cname = ssrcCnameLine.value;\n\tconst ssrcs = [];\n\tconst rtxSsrcs = [];\n\n\tfor (let i = 0; i < numStreams; ++i)\n\t{\n\t\tssrcs.push(firstSsrc + i);\n\n\t\tif (firstRtxSsrc)\n\t\t\trtxSsrcs.push(firstRtxSsrc + i);\n\t}\n\n\tofferMediaObject.ssrcGroups = offerMediaObject.ssrcGroups || [];\n\tofferMediaObject.ssrcs = offerMediaObject.ssrcs || [];\n\n\tofferMediaObject.ssrcGroups.push(\n\t\t{\n\t\t\tsemantics : 'SIM',\n\t\t\tssrcs     : ssrcs.join(' ')\n\t\t});\n\n\tfor (let i = 0; i < ssrcs.length; ++i)\n\t{\n\t\tconst ssrc = ssrcs[i];\n\n\t\tofferMediaObject.ssrcs.push(\n\t\t\t{\n\t\t\t\tid        : ssrc,\n\t\t\t\tattribute : 'cname',\n\t\t\t\tvalue     : cname\n\t\t\t});\n\n\t\tofferMediaObject.ssrcs.push(\n\t\t\t{\n\t\t\t\tid        : ssrc,\n\t\t\t\tattribute : 'msid',\n\t\t\t\tvalue     : `${streamId} ${track.id}`\n\t\t\t});\n\t}\n\n\tfor (let i = 0; i < rtxSsrcs.length; ++i)\n\t{\n\t\tconst ssrc = ssrcs[i];\n\t\tconst rtxSsrc = rtxSsrcs[i];\n\n\t\tofferMediaObject.ssrcs.push(\n\t\t\t{\n\t\t\t\tid        : rtxSsrc,\n\t\t\t\tattribute : 'cname',\n\t\t\t\tvalue     : cname\n\t\t\t});\n\n\t\tofferMediaObject.ssrcs.push(\n\t\t\t{\n\t\t\t\tid        : rtxSsrc,\n\t\t\t\tattribute : 'msid',\n\t\t\t\tvalue     : `${streamId} ${track.id}`\n\t\t\t});\n\n\t\tofferMediaObject.ssrcGroups.push(\n\t\t\t{\n\t\t\t\tsemantics : 'FID',\n\t\t\t\tssrcs     : `${ssrc} ${rtxSsrc}`\n\t\t\t});\n\t}\n}\n"]}