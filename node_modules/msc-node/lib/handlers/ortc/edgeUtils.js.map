{"version":3,"file":"edgeUtils.js","sourceRoot":"","sources":["../../../src/handlers/ortc/edgeUtils.ts"],"names":[],"mappings":";;;;AAAA,2DAAqC;AAGrC;;;GAGG;AACH,SAAgB,eAAe;IAE9B,MAAM,UAAU,GAAI,cAAsB,CAAC,eAAe,EAAE,CAAC;IAC7D,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAEzC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAC/B;QACC,kCAAkC;QAClC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;QACnC,OAAO,KAAK,CAAC,WAAW,CAAC;QAEzB,gBAAgB;QAChB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;QAEjE,kFAAkF;QAClF,IAAI,KAAK,CAAC,UAAU,EACpB;YACC,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YAEpC,IAAI,UAAU,CAAC,GAAG;gBACjB,UAAU,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAEzC,IAAI,UAAU,CAAC,oBAAoB,CAAC;gBACnC,UAAU,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC7E;QAED,gDAAgD;QAChD,KAAK,MAAM,QAAQ,IAAI,KAAK,CAAC,YAAY,IAAI,EAAE,EAC/C;YACC,IAAI,CAAC,QAAQ,CAAC,SAAS;gBACtB,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC;SACzB;KACD;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAnCD,0CAmCC;AAED;;GAEG;AACH,SAAgB,mBAAmB,CAAC,aAA4B;IAE/D,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;IAE9C,uBAAuB;IACvB,IAAI,MAAM,CAAC,GAAG,EACd;QACC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,OAAO,MAAM,CAAC,GAAG,CAAC;KAClB;IAED,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,EACjC;QACC,kCAAkC;QAClC,IAAI,KAAK,CAAC,QAAQ,EAClB;YACC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;YACnC,OAAO,KAAK,CAAC,QAAQ,CAAC;SACtB;QAED,qCAAqC;QACrC,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI;YAChC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3C,mBAAmB;QACnB,OAAO,KAAK,CAAC,QAAQ,CAAC;KACtB;IAED,OAAO,MAAM,CAAC;AACf,CAAC;AA7BD,kDA6BC","sourcesContent":["import * as utils from '../../utils';\nimport { RtpCapabilities, RtpParameters } from '../../RtpParameters';\n\n/**\n * Normalize ORTC based Edge's RTCRtpReceiver.getCapabilities() to produce a full\n * compliant ORTC RTCRtpCapabilities.\n */\nexport function getCapabilities(): RtpCapabilities\n{\n\tconst nativeCaps = (RTCRtpReceiver as any).getCapabilities();\n\tconst caps = utils.clone(nativeCaps, {});\n\n\tfor (const codec of caps.codecs)\n\t{\n\t\t// Rename numChannels to channels.\n\t\tcodec.channels = codec.numChannels;\n\t\tdelete codec.numChannels;\n\n\t\t// Add mimeType.\n\t\tcodec.mimeType = codec.mimeType || `${codec.kind}/${codec.name}`;\n\n\t\t// NOTE: Edge sets some numeric parameters as string rather than number. Fix them.\n\t\tif (codec.parameters)\n\t\t{\n\t\t\tconst parameters = codec.parameters;\n\n\t\t\tif (parameters.apt)\n\t\t\t\tparameters.apt = Number(parameters.apt);\n\n\t\t\tif (parameters['packetization-mode'])\n\t\t\t\tparameters['packetization-mode'] = Number(parameters['packetization-mode']);\n\t\t}\n\n\t\t// Delete emty parameter String in rtcpFeedback.\n\t\tfor (const feedback of codec.rtcpFeedback || [])\n\t\t{\n\t\t\tif (!feedback.parameter)\n\t\t\t\tfeedback.parameter = '';\n\t\t}\n\t}\n\n\treturn caps;\n}\n\n/**\n * Generate RTCRtpParameters as ORTC based Edge likes.\n */\nexport function mangleRtpParameters(rtpParameters: RtpParameters): RtpParameters\n{\n\tconst params = utils.clone(rtpParameters, {});\n\n\t// Rename mid to muxId.\n\tif (params.mid)\n\t{\n\t\tparams.muxId = params.mid;\n\t\tdelete params.mid;\n\t}\n\n\tfor (const codec of params.codecs)\n\t{\n\t\t// Rename channels to numChannels.\n\t\tif (codec.channels)\n\t\t{\n\t\t\tcodec.numChannels = codec.channels;\n\t\t\tdelete codec.channels;\n\t\t}\n\n\t\t// Add codec.name (requried by Edge).\n\t\tif (codec.mimeType && !codec.name)\n\t\t\tcodec.name = codec.mimeType.split('/')[1];\n\n\t\t// Remove mimeType.\n\t\tdelete codec.mimeType;\n\t}\n\n\treturn params;\n}\n"]}