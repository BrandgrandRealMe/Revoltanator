{"version":3,"file":"chunk.js","sourceRoot":"","sources":["../../../../sctp/src/chunk.ts"],"names":[],"mappings":"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","sourcesContent":["// ID Value    Chunk Type\n// -----       ----------\n// 0          - Payload Data (DATA)\n// 1          - Initiation (INIT)\n// 2          - Initiation Acknowledgement (INIT ACK)\n// 3          - Selective Acknowledgement (SACK)\n// 4          - Heartbeat Request (HEARTBEAT)\n// 5          - Heartbeat Acknowledgement (HEARTBEAT ACK)\n// 6          - Abort (ABORT)\n// 7          - Shutdown (SHUTDOWN)\n// 8          - Shutdown Acknowledgement (SHUTDOWN ACK)\n// 9          - Operation Error (ERROR)\n// 10         - State Cookie (COOKIE ECHO)\n// 11         - Cookie Acknowledgement (COOKIE ACK)\n// 12         - Reserved for Explicit Congestion Notification Echo\n//              (ECNE)\n// 13         - Reserved for Congestion Window Reduced (CWR)\n// 14         - Shutdown Complete (SHUTDOWN COMPLETE)\n// 15 to 62   - available\n// 63         - reserved for IETF-defined Chunk Extensions\n// 64 to 126  - available\n// 127        - reserved for IETF-defined Chunk Extensions\n// 128 to 190 - available\n// 191        - reserved for IETF-defined Chunk Extensions\n// 192 to 254 - available\n// 255        - reserved for IETF-defined Chunk Extensions\n\nimport { jspack } from \"jspack\";\nconst crc32c = require(\"turbo-crc32/crc32c\");\n\nexport class Chunk {\n  public get body(): Buffer | undefined {\n    return this._body;\n  }\n  public set body(value: Buffer | undefined) {\n    this._body = value;\n  }\n  static type = -1;\n\n  constructor(\n    public flags = 0,\n    private _body: Buffer | undefined = Buffer.from(\"\")\n  ) {}\n\n  get type() {\n    return Chunk.type;\n  }\n\n  get bytes() {\n    if (!this.body) throw new Error();\n\n    const data = Buffer.concat([\n      Buffer.from(\n        jspack.Pack(\"!BBH\", [this.type, this.flags, this.body.length + 4])\n      ),\n      this.body,\n      ...[...Array(padL(this.body.length))].map(() => Buffer.from(\"\\x00\")),\n    ]);\n    return data;\n  }\n}\n\nexport class BaseInitChunk extends Chunk {\n  initiateTag: number;\n  advertisedRwnd: number;\n  outboundStreams: number;\n  inboundStreams: number;\n  initialTsn: number;\n  params: [number, Buffer][];\n  constructor(public flags = 0, body?: Buffer) {\n    super(flags, body);\n\n    if (body) {\n      [\n        this.initiateTag,\n        this.advertisedRwnd,\n        this.outboundStreams,\n        this.inboundStreams,\n        this.initialTsn,\n      ] = jspack.Unpack(\"!LLHHL\", body);\n      this.params = decodeParams(body.slice(16));\n    } else {\n      this.initiateTag = 0;\n      this.advertisedRwnd = 0;\n      this.outboundStreams = 0;\n      this.inboundStreams = 0;\n      this.initialTsn = 0;\n      this.params = [];\n    }\n  }\n\n  get body() {\n    let body = Buffer.from(\n      jspack.Pack(\"!LLHHL\", [\n        this.initiateTag,\n        this.advertisedRwnd,\n        this.outboundStreams,\n        this.inboundStreams,\n        this.initialTsn,\n      ])\n    );\n    body = Buffer.concat([body, encodeParams(this.params)]);\n    return body;\n  }\n}\n\nexport class InitChunk extends BaseInitChunk {\n  static type = 1 as const;\n\n  get type() {\n    return InitChunk.type;\n  }\n}\n\nexport class InitAckChunk extends BaseInitChunk {\n  static type = 2 as const;\n\n  get type() {\n    return InitAckChunk.type;\n  }\n}\n\nexport class ReConfigChunk extends BaseInitChunk {\n  static type = 130 as const;\n\n  get type() {\n    return ReConfigChunk.type;\n  }\n}\n\nexport class ForwardTsnChunk extends Chunk {\n  static type = 192 as const;\n  streams: [number, number][] = [];\n  cumulativeTsn: number;\n\n  constructor(public flags = 0, body: Buffer | undefined) {\n    super(flags, body);\n\n    if (body) {\n      this.cumulativeTsn = jspack.Unpack(\"!L\", body)[0];\n      let pos = 4;\n      while (pos < body.length) {\n        this.streams.push(\n          jspack.Unpack(\"!HH\", body.slice(pos)) as [number, number]\n        );\n        pos += 4;\n      }\n    } else {\n      this.cumulativeTsn = 0;\n    }\n  }\n\n  get type() {\n    return ForwardTsnChunk.type;\n  }\n\n  set body(_: Buffer) {}\n\n  get body() {\n    const body = Buffer.from(jspack.Pack(\"!L\", [this.cumulativeTsn]));\n    return Buffer.concat([\n      body,\n      ...this.streams.map(([id, seq]) =>\n        Buffer.from(jspack.Pack(\"!HH\", [id, seq]))\n      ),\n    ]);\n  }\n}\n\nexport class DataChunk extends Chunk {\n  static type = 0 as const;\n  get type() {\n    return DataChunk.type;\n  }\n  tsn: number = 0;\n  streamId: number = 0;\n  streamSeqNum: number = 0;\n  protocol: number = 0;\n  userData: Buffer = Buffer.from(\"\");\n  abandoned: boolean = false;\n  acked: boolean = false;\n  misses: number = 0;\n  retransmit: boolean = false;\n  sentCount: number = 0;\n  bookSize: number = 0;\n  expiry?: number;\n  maxRetransmits?: number;\n  sentTime?: number;\n\n  constructor(public flags = 0, body: Buffer | undefined) {\n    super(flags, body);\n    if (body) {\n      [this.tsn, this.streamId, this.streamSeqNum, this.protocol] =\n        jspack.Unpack(\"!LHHL\", body);\n      this.userData = body.slice(12);\n    }\n  }\n\n  get bytes() {\n    const length = 16 + this.userData.length;\n    let data = Buffer.concat([\n      Buffer.from(\n        jspack.Pack(\"!BBHLHHL\", [\n          this.type,\n          this.flags,\n          length,\n          this.tsn,\n          this.streamId,\n          this.streamSeqNum,\n          this.protocol,\n        ])\n      ),\n      this.userData,\n    ]);\n    if (length % 4) {\n      data = Buffer.concat([\n        data,\n        ...[...Array(padL(length))].map(() => Buffer.from(\"\\x00\")),\n      ]);\n    }\n    return data;\n  }\n}\n\nexport class CookieEchoChunk extends Chunk {\n  static type = 10 as const;\n\n  get type() {\n    return CookieEchoChunk.type;\n  }\n}\n\nexport class CookieAckChunk extends Chunk {\n  static type = 11 as const;\n\n  get type() {\n    return CookieAckChunk.type;\n  }\n}\n\nexport class BaseParamsChunk extends Chunk {\n  params: [number, Buffer][] = [];\n  constructor(public flags = 0, body: Buffer | undefined = undefined) {\n    super(flags, body);\n    if (body) {\n      this.params = decodeParams(body);\n    }\n  }\n\n  get body() {\n    return encodeParams(this.params);\n  }\n}\n\nexport class AbortChunk extends BaseParamsChunk {\n  static type = 6 as const;\n\n  get type() {\n    return AbortChunk.type;\n  }\n}\n\nexport class ErrorChunk extends BaseParamsChunk {\n  static type = 9 as const;\n  static readonly CODE = {\n    InvalidStreamIdentifier: 1,\n    MissingMandatoryParameter: 2,\n    StaleCookieError: 3,\n    OutofResource: 4,\n    UnresolvableAddress: 5,\n    UnrecognizedChunkType: 6,\n    InvalidMandatoryParameter: 7,\n    UnrecognizedParameters: 8,\n    NoUserData: 9,\n    CookieReceivedWhileShuttingDown: 10,\n    RestartofanAssociationwithNewAddresses: 11,\n    UserInitiatedAbort: 12,\n    ProtocolViolation: 13,\n  } as const;\n\n  get type() {\n    return ErrorChunk.type;\n  }\n\n  get descriptions() {\n    return this.params.map(([code, body]) => {\n      const name = (Object.entries(ErrorChunk.CODE).find(\n        ([, num]) => num === code\n      ) || [])[0];\n      return { name, body };\n    });\n  }\n}\n\nexport class HeartbeatChunk extends BaseParamsChunk {\n  static type = 4 as const;\n\n  get type() {\n    return HeartbeatChunk.type;\n  }\n}\n\nexport class HeartbeatAckChunk extends BaseParamsChunk {\n  static type = 5 as const;\n\n  get type() {\n    return HeartbeatAckChunk.type;\n  }\n}\n\n// https://tools.ietf.org/html/rfc6525#section-3.1\n// chunkReconfig represents an SCTP Chunk used to reconfigure streams.\n//\n//  0                   1                   2                   3\n//  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// | Type = 130    |  Chunk Flags  |      Chunk Length             |\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// \\                                                               \\\n// /                  Re-configuration Parameter                   /\n// \\                                                               \\\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// \\                                                               \\\n// /             Re-configuration Parameter (optional)             /\n// \\                                                               \\\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nexport class ReconfigChunk extends BaseParamsChunk {\n  static type = 130 as const;\n\n  get type() {\n    return ReconfigChunk.type;\n  }\n}\n\nexport class SackChunk extends Chunk {\n  static type = 3;\n  get type() {\n    return SackChunk.type;\n  }\n\n  gaps: [number, number][] = [];\n  duplicates: number[] = [];\n  cumulativeTsn = 0;\n  advertisedRwnd = 0;\n\n  constructor(public flags = 0, body: Buffer | undefined) {\n    super(flags, body);\n\n    if (body) {\n      const [cumulativeTsn, advertisedRwnd, nbGaps, nbDuplicates] =\n        jspack.Unpack(\"!LLHH\", body);\n      this.cumulativeTsn = cumulativeTsn;\n      this.advertisedRwnd = advertisedRwnd;\n\n      let pos = 12;\n\n      [...Array(nbGaps)].forEach(() => {\n        this.gaps.push(\n          jspack.Unpack(\"!HH\", body.slice(pos)) as [number, number]\n        );\n        pos += 4;\n      });\n\n      [...Array(nbDuplicates)].forEach(() => {\n        this.duplicates.push(jspack.Unpack(\"!L\", body.slice(pos))[0]);\n        pos += 4;\n      });\n    }\n  }\n\n  get bytes() {\n    const length = 16 + 4 * (this.gaps.length + this.duplicates.length);\n    let data = Buffer.from(\n      jspack.Pack(\"!BBHLLHH\", [\n        this.type,\n        this.flags,\n        length,\n        this.cumulativeTsn,\n        this.advertisedRwnd,\n        this.gaps.length,\n        this.duplicates.length,\n      ])\n    );\n    data = Buffer.concat([\n      data,\n      ...this.gaps.map((gap) => Buffer.from(jspack.Pack(\"!HH\", gap))),\n    ]);\n    data = Buffer.concat([\n      data,\n      ...this.duplicates.map((tsn) => Buffer.from(jspack.Pack(\"!L\", [tsn]))),\n    ]);\n    return data;\n  }\n}\n\nexport class ShutdownChunk extends Chunk {\n  static type = 7;\n  get type() {\n    return ShutdownChunk.type;\n  }\n\n  cumulativeTsn = 0;\n\n  constructor(public flags = 0, body: Buffer | undefined) {\n    super(flags, body);\n\n    if (body) {\n      this.cumulativeTsn = jspack.Unpack(\"!L\", body)[0];\n    }\n  }\n\n  get body() {\n    return Buffer.from(jspack.Pack(\"!L\", [this.cumulativeTsn]));\n  }\n}\n\nexport class ShutdownAckChunk extends Chunk {\n  static type = 8;\n  get type() {\n    return ShutdownAckChunk.type;\n  }\n}\n\nexport class ShutdownCompleteChunk extends Chunk {\n  static type = 14;\n  get type() {\n    return ShutdownCompleteChunk.type;\n  }\n}\n\nconst CHUNK_CLASSES: typeof Chunk[] = [\n  DataChunk,\n  InitChunk,\n  InitAckChunk,\n  SackChunk,\n  HeartbeatChunk,\n  HeartbeatAckChunk,\n  AbortChunk,\n  ShutdownChunk,\n  ShutdownAckChunk,\n  ErrorChunk,\n  CookieEchoChunk,\n  CookieAckChunk,\n  ShutdownCompleteChunk,\n  ReconfigChunk,\n  ForwardTsnChunk,\n];\n\nexport const CHUNK_BY_TYPE = CHUNK_CLASSES.reduce(\n  (acc: { [key: string]: typeof Chunk }, cur) => {\n    acc[cur.type] = cur;\n    return acc;\n  },\n  {}\n);\n\nfunction padL(l: number) {\n  const m = l % 4;\n  return m ? 4 - m : 0;\n}\n\nfunction encodeParams(params: [number, Buffer][]) {\n  let body = Buffer.from(\"\");\n  let padding = Buffer.from(\"\");\n  params.forEach(([type, value]) => {\n    const length = value.length + 4;\n    body = Buffer.concat([\n      body,\n      padding,\n      Buffer.from(jspack.Pack(\"!HH\", [type, length])),\n      value,\n    ]);\n    padding = Buffer.concat(\n      [...Array(padL(length))].map(() => Buffer.from(\"\\x00\"))\n    );\n  });\n  return body;\n}\n\nexport function decodeParams(body: Buffer): [number, Buffer][] {\n  const params: [number, Buffer][] = [];\n  let pos = 0;\n  while (pos <= body.length - 4) {\n    const [type, length] = jspack.Unpack(\"!HH\", body.slice(pos));\n    params.push([type, body.slice(pos + 4, pos + length)]);\n    pos += length + padL(length);\n  }\n  return params;\n}\n\nexport function parsePacket(data: Buffer): [number, number, number, Chunk[]] {\n  if (data.length < 12)\n    throw new Error(\"SCTP packet length is less than 12 bytes\");\n\n  const [sourcePort, destinationPort, verificationTag] = jspack.Unpack(\n    \"!HHL\",\n    data\n  );\n\n  const checkSum = data.readUInt32LE(8);\n\n  const expect = crc32c(\n    Buffer.concat([\n      data.slice(0, 8),\n      Buffer.from(\"\\x00\\x00\\x00\\x00\"),\n      data.slice(12),\n    ])\n  );\n\n  if (checkSum !== expect) throw new Error(\"SCTP packet has invalid checksum\");\n\n  const chunks: Chunk[] = [];\n  let pos = 12;\n  while (pos + 4 <= data.length) {\n    const [chunkType, chunkFlags, chunkLength] = jspack.Unpack(\n      \"!BBH\",\n      data.slice(pos)\n    );\n    const chunkBody = data.slice(pos + 4, pos + chunkLength);\n    const ChunkClass = CHUNK_BY_TYPE[chunkType.toString()];\n    if (ChunkClass) {\n      chunks.push(new ChunkClass(chunkFlags, chunkBody));\n    } else {\n      throw new Error(\"unknown\");\n    }\n    pos += chunkLength + padL(chunkLength);\n  }\n  return [sourcePort, destinationPort, verificationTag, chunks];\n}\n\nexport function serializePacket(\n  sourcePort: number,\n  destinationPort: number,\n  verificationTag: number,\n  chunk: Chunk\n) {\n  const header = Buffer.from(\n    jspack.Pack(\"!HHL\", [sourcePort, destinationPort, verificationTag])\n  );\n  const body = chunk.bytes;\n\n  const checksum: number = crc32c(\n    Buffer.concat([header, Buffer.from(\"\\x00\\x00\\x00\\x00\"), body])\n  );\n  const checkSumBuf = Buffer.alloc(4);\n  checkSumBuf.writeUInt32LE(checksum, 0);\n\n  const packet = Buffer.concat([header, checkSumBuf, body]);\n\n  return packet;\n}\n"]}