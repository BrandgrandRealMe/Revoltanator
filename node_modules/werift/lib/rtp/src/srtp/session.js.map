{"version":3,"file":"session.js","sourceRoot":"","sources":["../../../../../rtp/src/srtp/session.ts"],"names":[],"mappings":";;;AAcA,MAAa,OAAO;IAKlB,YAAoB,UAAe;QAAf,eAAU,GAAV,UAAU,CAAK;IAAG,CAAC;IAEvC,KAAK,CACH,cAAsB,EACtB,eAAuB,EACvB,eAAuB,EACvB,gBAAwB,EACxB,OAAe;QAEf,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,UAAU,CACrC,cAAc,EACd,eAAe,EACf,OAAO,CACR,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,UAAU,CACtC,eAAe,EACf,gBAAgB,EAChB,OAAO,CACR,CAAC;IACJ,CAAC;CACF;AAzBD,0BAyBC","sourcesContent":["import { Context } from \"./context/context\";\n\nexport type SessionKeys = {\n  localMasterKey: Buffer;\n  localMasterSalt: Buffer;\n  remoteMasterKey: Buffer;\n  remoteMasterSalt: Buffer;\n};\n\nexport type Config = {\n  keys: SessionKeys;\n  profile: number;\n};\n\nexport class Session<T extends Context> {\n  localContext!: T;\n  remoteContext!: T;\n  onData?: (buf: Buffer) => void;\n\n  constructor(private ContextCls: any) {}\n\n  start(\n    localMasterKey: Buffer,\n    localMasterSalt: Buffer,\n    remoteMasterKey: Buffer,\n    remoteMasterSalt: Buffer,\n    profile: number\n  ) {\n    this.localContext = new this.ContextCls(\n      localMasterKey,\n      localMasterSalt,\n      profile\n    );\n    this.remoteContext = new this.ContextCls(\n      remoteMasterKey,\n      remoteMasterSalt,\n      profile\n    );\n  }\n}\n"]}