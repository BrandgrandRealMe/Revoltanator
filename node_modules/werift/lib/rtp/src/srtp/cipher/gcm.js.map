{"version":3,"file":"gcm.js","sourceRoot":"","sources":["../../../../../../rtp/src/srtp/cipher/gcm.ts"],"names":[],"mappings":"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","sourcesContent":["import { createCipheriv, createDecipheriv } from \"crypto\";\nimport { range } from \"lodash\";\n\nimport { bufferWriter } from \"../../../../common/src\";\nimport { growBufferSize } from \"../../helper\";\nimport { RtcpHeader } from \"../../rtcp/header\";\nimport { RtpHeader } from \"../../rtp/rtp\";\nimport { CipherAesBase } from \".\";\n\nexport class CipherAesGcm extends CipherAesBase {\n  readonly aeadAuthTagLen = 16;\n\n  constructor(\n    srtpSessionKey: Buffer,\n    srtpSessionSalt: Buffer,\n    srtcpSessionKey: Buffer,\n    srtcpSessionSalt: Buffer\n  ) {\n    super(srtpSessionKey, srtpSessionSalt, srtcpSessionKey, srtcpSessionSalt);\n  }\n\n  encryptRtp(header: RtpHeader, payload: Buffer, rolloverCounter: number) {\n    const dst = Buffer.alloc(\n      header.serializeSize + payload.length + this.aeadAuthTagLen\n    );\n    const hdr = header.serialize(header.serializeSize);\n    hdr.copy(dst);\n\n    const { payloadOffset } = header;\n\n    const iv = this.rtpInitializationVector(header, rolloverCounter);\n\n    const cipher = createCipheriv(\"aes-128-gcm\", this.srtpSessionKey, iv);\n    cipher.setAAD(hdr);\n    const enc = cipher.update(payload);\n    cipher.final();\n    enc.copy(dst, payloadOffset);\n\n    const authTag = cipher.getAuthTag();\n    authTag.copy(dst, payloadOffset + enc.length);\n\n    return dst;\n  }\n\n  decryptRtp(cipherText: Buffer, rolloverCounter: number): [Buffer, RtpHeader] {\n    const header = RtpHeader.deSerialize(cipherText);\n\n    let dst = Buffer.from([]);\n    dst = growBufferSize(dst, cipherText.length - this.aeadAuthTagLen);\n    cipherText.slice(0, header.payloadOffset).copy(dst);\n\n    const iv = this.rtpInitializationVector(header, rolloverCounter);\n\n    const enc = cipherText.slice(\n      header.payloadOffset,\n      cipherText.length - this.aeadAuthTagLen\n    );\n\n    const cipher = createDecipheriv(\"aes-128-gcm\", this.srtpSessionKey, iv);\n    const dec = cipher.update(enc);\n\n    dec.copy(dst, header.payloadOffset);\n\n    return [dst, header];\n  }\n\n  encryptRTCP(rtcpPacket: Buffer, srtcpIndex: number): Buffer {\n    const ssrc = rtcpPacket.readUInt32BE(4);\n\n    const addPos = rtcpPacket.length + this.aeadAuthTagLen;\n    let dst = Buffer.from([]);\n    dst = growBufferSize(dst, addPos + srtcpIndexSize);\n    rtcpPacket.slice(0, 8).copy(dst);\n\n    const iv = this.rtcpInitializationVector(ssrc, srtcpIndex);\n    const aad = this.rtcpAdditionalAuthenticatedData(rtcpPacket, srtcpIndex);\n\n    const cipher = createCipheriv(\"aes-128-gcm\", this.srtcpSessionKey, iv);\n    cipher.setAAD(aad);\n    const enc = cipher.update(rtcpPacket.slice(8));\n    cipher.final();\n    enc.copy(dst, 8);\n\n    const authTag = cipher.getAuthTag();\n    authTag.copy(dst, 8 + enc.length);\n    aad.slice(8, 12).copy(dst, addPos);\n\n    return dst;\n  }\n\n  decryptRTCP(encrypted: Buffer): [Buffer, RtcpHeader] {\n    const header = RtcpHeader.deSerialize(encrypted);\n    const aadPos = encrypted.length - srtcpIndexSize;\n\n    const dst = Buffer.alloc(aadPos - this.aeadAuthTagLen);\n    encrypted.slice(0, 8).copy(dst);\n\n    const ssrc = encrypted.readUInt32BE(4);\n\n    let srtcpIndex = encrypted.readUInt32BE(encrypted.length - 4);\n    srtcpIndex &= ~(rtcpEncryptionFlag << 24);\n\n    const iv = this.rtcpInitializationVector(ssrc, srtcpIndex);\n    const aad = this.rtcpAdditionalAuthenticatedData(encrypted, srtcpIndex);\n\n    const cipher = createDecipheriv(\"aes-128-gcm\", this.srtcpSessionKey, iv);\n    cipher.setAAD(aad);\n    const dec = cipher.update(encrypted.slice(8, aadPos));\n\n    dec.copy(dst, 8);\n\n    return [dst, header];\n  }\n\n  // https://tools.ietf.org/html/rfc7714#section-8.1\n  private rtpInitializationVector(header: RtpHeader, rolloverCounter: number) {\n    const iv = bufferWriter(\n      [2, 4, 4, 2],\n      [0, header.ssrc, rolloverCounter, header.sequenceNumber]\n    );\n    range(0, iv.length).forEach((i) => {\n      iv[i] = iv[i] ^ this.srtpSessionSalt[i];\n    });\n    return iv;\n  }\n\n  // https://tools.ietf.org/html/rfc7714#section-9.1\n  private rtcpInitializationVector(ssrc: number, srtcpIndex: number) {\n    const iv = bufferWriter([2, 4, 2, 4], [0, ssrc, 0, srtcpIndex]);\n    range(0, iv.length).forEach((i) => {\n      iv[i] = iv[i] ^ this.srtcpSessionSalt[i];\n    });\n    return iv;\n  }\n\n  // https://datatracker.ietf.org/doc/html/rfc7714#section-17\n  private rtcpAdditionalAuthenticatedData(\n    rtcpPacket: Buffer,\n    srtcpIndex: number\n  ) {\n    const aad = Buffer.concat([\n      rtcpPacket.slice(0, 8),\n      bufferWriter([4], [srtcpIndex]),\n    ]);\n    aad[8] |= rtcpEncryptionFlag;\n    return aad;\n  }\n}\n\nconst srtcpIndexSize = 4;\nconst rtcpEncryptionFlag = 0x80;\n"]}