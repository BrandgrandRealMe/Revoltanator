{"version":3,"file":"rr.js","sourceRoot":"","sources":["../../../../../rtp/src/rtcp/rr.ts"],"names":[],"mappings":";;;AAAA,mCAA+B;AAE/B,6CAAiE;AACjE,iCAA6C;AAE7C,MAAa,YAAY;IAMvB,YAAY,QAA+B,EAAE;QAL7C,SAAI,GAAW,CAAC,CAAC;QACjB,YAAO,GAAuB,EAAE,CAAC;QAEjC,SAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QAGvB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,kBAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YACtB,OAAO;YACP,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;SACpD,CAAC,CAAC;QACH,OAAO,0BAAmB,CAAC,SAAS,CAClC,YAAY,CAAC,IAAI,EACjB,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,OAAO,EACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAC/B,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,KAAa;QAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,kBAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,MAAM,OAAO,GAAuB,EAAE,CAAC;QACvC,cAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,GAAG,IAAI,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC;;AAjCH,oCAkCC;AA/BQ,iBAAI,GAAG,GAAG,CAAC;AAiCpB,MAAa,gBAAgB;IAS3B,YAAY,QAAmC,EAAE;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,OAAO,kBAAY,CACjB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB;YACE,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,YAAY;YACjB,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,eAAe;YACpB,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,GAAG;YACR,IAAI,CAAC,IAAI;SACV,CACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,IAAY;QAC7B,MAAM,CACJ,IAAI,EACJ,YAAY,EACZ,WAAW,EACX,eAAe,EACf,MAAM,EACN,GAAG,EACH,IAAI,EACL,GAAG,kBAAY,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE9C,OAAO,IAAI,gBAAgB,CAAC;YAC1B,IAAI;YACJ,YAAY;YACZ,WAAW;YACX,eAAe;YACf,MAAM;YACN,GAAG;YACH,IAAI;SACL,CAAC,CAAC;IACL,CAAC;CACF;AAjDD,4CAiDC","sourcesContent":["import { range } from \"lodash\";\n\nimport { bufferReader, bufferWriter } from \"../../../common/src\";\nimport { RtcpPacketConverter } from \"./rtcp\";\n\nexport class RtcpRrPacket {\n  ssrc: number = 0;\n  reports: RtcpReceiverInfo[] = [];\n  static type = 201;\n  type = RtcpRrPacket.type;\n\n  constructor(props: Partial<RtcpRrPacket> = {}) {\n    Object.assign(this, props);\n  }\n\n  serialize() {\n    let payload = bufferWriter([4], [this.ssrc]);\n    payload = Buffer.concat([\n      payload,\n      ...this.reports.map((report) => report.serialize()),\n    ]);\n    return RtcpPacketConverter.serialize(\n      RtcpRrPacket.type,\n      this.reports.length,\n      payload,\n      Math.floor(payload.length / 4)\n    );\n  }\n\n  static deSerialize(data: Buffer, count: number) {\n    const [ssrc] = bufferReader(data, [4]);\n    let pos = 4;\n    const reports: RtcpReceiverInfo[] = [];\n    range(count).forEach(() => {\n      reports.push(RtcpReceiverInfo.deSerialize(data.slice(pos, pos + 24)));\n      pos += 24;\n    });\n    return new RtcpRrPacket({ ssrc, reports });\n  }\n}\n\nexport class RtcpReceiverInfo {\n  ssrc!: number;\n  fractionLost!: number;\n  packetsLost!: number;\n  highestSequence!: number;\n  jitter!: number;\n  lsr!: number;\n  dlsr!: number;\n\n  constructor(props: Partial<RtcpReceiverInfo> = {}) {\n    Object.assign(this, props);\n  }\n\n  serialize() {\n    return bufferWriter(\n      [4, 1, 3, 4, 4, 4, 4],\n      [\n        this.ssrc,\n        this.fractionLost,\n        this.packetsLost,\n        this.highestSequence,\n        this.jitter,\n        this.lsr,\n        this.dlsr,\n      ]\n    );\n  }\n\n  static deSerialize(data: Buffer) {\n    const [\n      ssrc,\n      fractionLost,\n      packetsLost,\n      highestSequence,\n      jitter,\n      lsr,\n      dlsr,\n    ] = bufferReader(data, [4, 1, 3, 4, 4, 4, 4]);\n\n    return new RtcpReceiverInfo({\n      ssrc,\n      fractionLost,\n      packetsLost,\n      highestSequence,\n      jitter,\n      lsr,\n      dlsr,\n    });\n  }\n}\n"]}