{"version":3,"file":"remb.js","sourceRoot":"","sources":["../../../../../../rtp/src/rtcp/psfb/remb.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  BitWriter,\n  bufferReader,\n  bufferWriter,\n  getBit,\n} from \"../../../../common/src\";\n\nexport class ReceiverEstimatedMaxBitrate {\n  static count = 15;\n  length!: number;\n  count = ReceiverEstimatedMaxBitrate.count;\n  senderSsrc!: number;\n  mediaSsrc!: number;\n  readonly uniqueID: string = \"REMB\";\n  ssrcNum: number = 0;\n  brExp!: number;\n  brMantissa!: number;\n  bitrate!: bigint;\n  ssrcFeedbacks: number[] = [];\n\n  constructor(props: Partial<ReceiverEstimatedMaxBitrate> = {}) {\n    Object.assign(this, props);\n  }\n\n  static deSerialize(data: Buffer) {\n    const [senderSsrc, mediaSsrc, uniqueID, ssrcNum, e_m] = bufferReader(\n      data,\n      [4, 4, 4, 1, 1]\n    );\n\n    const brExp = getBit(e_m, 0, 6);\n    const brMantissa = (getBit(e_m, 6, 2) << 16) + (data[14] << 8) + data[15];\n\n    const bitrate =\n      brExp > 46 ? 18446744073709551615n : BigInt(brMantissa) << BigInt(brExp);\n\n    const ssrcFeedbacks: number[] = [];\n    for (let i = 16; i < data.length; i += 4) {\n      const feedback = data.slice(i).readUIntBE(0, 4);\n      ssrcFeedbacks.push(feedback);\n    }\n\n    return new ReceiverEstimatedMaxBitrate({\n      senderSsrc,\n      mediaSsrc,\n      uniqueID: bufferWriter([4], [uniqueID]).toString(),\n      ssrcNum,\n      brExp,\n      brMantissa,\n      ssrcFeedbacks,\n      bitrate,\n    });\n  }\n\n  serialize() {\n    const constant = Buffer.concat([\n      bufferWriter([4, 4], [this.senderSsrc, this.mediaSsrc]),\n      Buffer.from(this.uniqueID),\n      bufferWriter([1], [this.ssrcNum]),\n    ]);\n\n    const writer = new BitWriter(24);\n    writer.set(6, 0, this.brExp).set(18, 6, this.brMantissa);\n    const feedbacks = Buffer.concat(\n      this.ssrcFeedbacks.map((feedback) => bufferWriter([4], [feedback]))\n    );\n\n    const buf = Buffer.concat([\n      constant,\n      bufferWriter([3], [writer.value]),\n      feedbacks,\n    ]);\n    this.length = buf.length / 4;\n    return buf;\n  }\n}\n"]}