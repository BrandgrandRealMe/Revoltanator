{"version":3,"file":"vp8.js","sourceRoot":"","sources":["../../../../../rtp/src/codec/vp8.ts"],"names":[],"mappings":"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","sourcesContent":["import { getBit, paddingByte } from \"../../../common/src\";\n\n// RFC 7741 - RTP Payload Format for VP8 Video\n\n//        0 1 2 3 4 5 6 7                      0 1 2 3 4 5 6 7\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//       |X|R|N|S|R| PID | (REQUIRED)        |X|R|N|S|R| PID | (REQUIRED)\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//  X:   |I|L|T|K| RSV   | (OPTIONAL)   X:   |I|L|T|K| RSV   | (OPTIONAL)\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//  I:   |M| PictureID   | (OPTIONAL)   I:   |M| PictureID   | (OPTIONAL)\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//  L:   |   TL0PICIDX   | (OPTIONAL)        |   PictureID   |\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//  T/K: |TID|Y| KEYIDX  | (OPTIONAL)   L:   |   TL0PICIDX   | (OPTIONAL)\n//       +-+-+-+-+-+-+-+-+                   +-+-+-+-+-+-+-+-+\n//                                      T/K: |TID|Y| KEYIDX  | (OPTIONAL)\n//                                           +-+-+-+-+-+-+-+-+\n\n// 0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// |Size0|H| VER |P|\n// +-+-+-+-+-+-+-+-+\n// |     Size1     |\n// +-+-+-+-+-+-+-+-+\n// |     Size2     |\n// +-+-+-+-+-+-+-+-+\n// | Octets 4..N of|\n// | VP8 payload   |\n// :               :\n// +-+-+-+-+-+-+-+-+\n// | OPTIONAL RTP  |\n// | padding       |\n// :               :\n// +-+-+-+-+-+-+-+-+\n\nexport class Vp8RtpPayload {\n  x!: number;\n  n!: number;\n  s!: number;\n  pid!: number;\n  i?: number;\n  l?: number;\n  t?: number;\n  k?: number;\n  m?: number;\n  pictureId?: number;\n  size0?: number;\n  h?: number;\n  ver?: number;\n  p?: number;\n\n  static deSerialize(buf: Buffer) {\n    const c = new Vp8RtpPayload();\n\n    let offset = 0;\n\n    c.x = getBit(buf[offset], 0);\n    c.n = getBit(buf[offset], 2);\n    c.s = getBit(buf[offset], 3);\n    c.pid = getBit(buf[offset], 5, 3);\n\n    offset++;\n\n    if (c.x === 1) {\n      c.i = getBit(buf[offset], 0);\n      c.l = getBit(buf[offset], 1);\n      c.t = getBit(buf[offset], 2);\n      c.k = getBit(buf[offset], 3);\n\n      offset++;\n\n      if (c.i) {\n        c.m = getBit(buf[offset], 0);\n\n        if (c.m === 1) {\n          const _7 = paddingByte(getBit(buf[offset], 1, 7));\n          const _8 = paddingByte(buf[offset + 1]);\n          c.pictureId = parseInt(_7 + _8, 2);\n          offset += 2;\n        } else {\n          c.pictureId = getBit(buf[offset], 1, 7);\n          offset++;\n        }\n      }\n    }\n\n    if (c.s === 1 && c.pid === 0) {\n      c.size0 = getBit(buf[offset], 0, 3);\n      c.h = getBit(buf[offset], 3);\n      c.ver = getBit(buf[offset], 4, 3);\n      c.p = getBit(buf[offset], 7);\n    }\n\n    return c;\n  }\n\n  get isKeyframe() {\n    return this.p === 0;\n  }\n}\n"]}