{"version":3,"file":"vp9.js","sourceRoot":"","sources":["../../../../../rtp/src/codec/vp9.ts"],"names":[],"mappings":"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","sourcesContent":["// RTP Payload Format for VP9 Video draft-ietf-payload-vp9-16 https://datatracker.ietf.org/doc/html/draft-ietf-payload-vp9\n\nimport { getBit, paddingByte } from \"../../../common/src\";\n\n//          0 1 2 3 4 5 6 7\n//         +-+-+-+-+-+-+-+-+\n//         |I|P|L|F|B|E|V|Z| (REQUIRED)\n//         +-+-+-+-+-+-+-+-+\n//    I:   |M| PICTURE ID  | (REQUIRED)\n//         +-+-+-+-+-+-+-+-+\n//    M:   | EXTENDED PID  | (RECOMMENDED)\n//         +-+-+-+-+-+-+-+-+\n//    L:   | TID |U| SID |D| (Conditionally RECOMMENDED)\n//         +-+-+-+-+-+-+-+-+                             -\\\n//    P,F: | P_DIFF      |N| (Conditionally REQUIRED)    - up to 3 times\n//         +-+-+-+-+-+-+-+-+                             -/\n//    V:   | SS            |\n//         | ..            |\n//         +-+-+-+-+-+-+-+-+\n\n//          0 1 2 3 4 5 6 7\n//         +-+-+-+-+-+-+-+-+\n//         |I|P|L|F|B|E|V|Z| (REQUIRED)\n//         +-+-+-+-+-+-+-+-+\n//    I:   |M| PICTURE ID  | (RECOMMENDED)\n//         +-+-+-+-+-+-+-+-+\n//    M:   | EXTENDED PID  | (RECOMMENDED)\n//         +-+-+-+-+-+-+-+-+\n//    L:   | TID |U| SID |D| (Conditionally RECOMMENDED)\n//         +-+-+-+-+-+-+-+-+\n//         |   TL0PICIDX   | (Conditionally REQUIRED)\n//         +-+-+-+-+-+-+-+-+\n//    V:   | SS            |\n//         | ..            |\n//         +-+-+-+-+-+-+-+-+\n\nexport class Vp9RtpPayload {\n  i!: number;\n  p!: number;\n  l!: number;\n  f!: number;\n  b!: number;\n  e!: number;\n  v!: number;\n  z!: number;\n  m?: number;\n  pictureId?: number;\n  tid?: number;\n  u?: number;\n  sid?: number;\n  d?: number;\n\n  static deSerialize(buf: Buffer) {\n    const c = new Vp9RtpPayload();\n\n    let index = 0;\n\n    c.i = getBit(buf[index], 0);\n    c.p = getBit(buf[index], 1);\n    c.l = getBit(buf[index], 2);\n    c.f = getBit(buf[index], 3);\n    c.b = getBit(buf[index], 4);\n    c.e = getBit(buf[index], 5);\n    c.v = getBit(buf[index], 6);\n    c.z = getBit(buf[index], 7);\n\n    index++;\n\n    if (c.i === 1) {\n      c.m = getBit(buf[index], 0);\n\n      if (c.m === 1) {\n        const _7 = paddingByte(getBit(buf[index], 1, 7));\n        const _8 = paddingByte(buf[index + 1]);\n        c.pictureId = parseInt(_7 + _8, 2);\n        index += 2;\n      } else {\n        c.pictureId = getBit(buf[index], 1, 7);\n        index++;\n      }\n    }\n\n    c.tid = getBit(buf[index], 0, 3);\n    c.u = getBit(buf[index], 3);\n    c.sid = getBit(buf[index], 4, 3);\n    c.d = getBit(buf[index], 7);\n\n    return c;\n  }\n\n  get isKeyframe() {\n    return !this.p && this.b && (!this.sid || !this.l);\n  }\n}\n"]}