{"version":3,"file":"candidate.js","sourceRoot":"","sources":["../../../../ice/src/candidate.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash } from \"crypto\";\nimport { range } from \"lodash\";\nimport { isIPv4 } from \"net\";\n\nexport class Candidate {\n  // An ICE candidate.\n\n  constructor(\n    public foundation: string,\n    public component: number,\n    public transport: string,\n    public priority: number,\n    public host: string,\n    public port: number,\n    public type: string,\n    public relatedAddress?: string,\n    public relatedPort?: number,\n    public tcptype?: string,\n    public generation?: number\n  ) {}\n\n  static fromSdp(sdp: string) {\n    // Parse a :class:`Candidate` from SDP.\n    // .. code-block:: python\n    //    Candidate.from_sdp(\n    //     '6815297761 1 udp 659136 1.2.3.4 31102 typ host generation 0')\n\n    const bits = sdp.split(\" \");\n    if (bits.length < 8) throw new Error(\"SDP does not have enough properties\");\n\n    const kwargs = {\n      foundation: bits[0],\n      component: Number(bits[1]),\n      transport: bits[2],\n      priority: Number(bits[3]),\n      host: bits[4],\n      port: Number(bits[5]),\n      type: bits[7],\n    };\n\n    for (const i of range(8, bits.length - 1, 2)) {\n      if (bits[i] === \"raddr\") {\n        (kwargs as any)[\"related_address\"] = bits[i + 1];\n      } else if (bits[i] === \"rport\") {\n        (kwargs as any)[\"related_port\"] = Number(bits[i + 1]);\n      } else if (bits[i] === \"tcptype\") {\n        (kwargs as any)[\"tcptype\"] = bits[i + 1];\n      } else if (bits[i] === \"generation\") {\n        (kwargs as any)[\"generation\"] = Number(bits[i + 1]);\n      }\n    }\n    const { foundation, component, transport, priority, host, port, type } =\n      kwargs;\n\n    return new Candidate(\n      foundation,\n      component,\n      transport,\n      priority,\n      host,\n      port,\n      type,\n      (kwargs as any)[\"related_address\"],\n      (kwargs as any)[\"related_port\"],\n      (kwargs as any)[\"tcptype\"],\n      (kwargs as any)[\"generation\"]\n    );\n  }\n\n  canPairWith(other: Candidate) {\n    // \"\"\"\n    // A local candidate is paired with a remote candidate if and only if\n    // the two candidates have the same component ID and have the same IP\n    // address version.\n    // \"\"\"\n    const a = isIPv4(this.host);\n    const b = isIPv4(other.host);\n    return (\n      this.component === other.component &&\n      this.transport.toLowerCase() === other.transport.toLowerCase() &&\n      a === b\n    );\n  }\n\n  toSdp() {\n    let sdp = `${this.foundation} ${this.component} ${this.transport} ${this.priority} ${this.host} ${this.port} typ ${this.type}`;\n\n    if (this.relatedAddress) sdp += ` raddr ${this.relatedAddress}`;\n    if (this.relatedPort != undefined) sdp += ` rport ${this.relatedPort}`;\n    if (this.tcptype) sdp += ` tcptype ${this.tcptype}`;\n    if (this.generation != undefined) sdp += ` generation ${this.generation}`;\n\n    return sdp;\n  }\n}\n\nexport function candidateFoundation(\n  candidateType: string,\n  candidateTransport: string,\n  baseAddress: string\n) {\n  // \"\"\"\n  // See RFC 5245 - 4.1.1.3. Computing Foundations\n  // \"\"\"\n  const key = `${candidateType}|${candidateTransport}|${baseAddress}`;\n\n  return createHash(\"md5\").update(key, \"ascii\").digest(\"hex\").slice(7);\n}\n\n// priorityを決める\nexport function candidatePriority(\n  candidateComponent: number,\n  candidateType: string,\n  localPref = 65535\n) {\n  // See RFC 5245 - 4.1.2.1. Recommended Formula\n  let typePref = 0;\n  if (candidateType === \"host\") {\n    typePref = 126;\n  } else if (candidateType === \"prflx\") {\n    typePref = 110;\n  } else if (candidateType === \"srflx\") {\n    typePref = 100;\n  } else {\n    typePref = 0;\n  }\n  return (\n    (1 << 24) * typePref + (1 << 8) * localPref + (256 - candidateComponent)\n  );\n}\n"]}