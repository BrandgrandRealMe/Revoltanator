{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../../ice/src/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { randomBytes } from \"crypto\";\nimport debug from \"debug\";\nimport PCancelable from \"p-cancelable\";\nimport { Event } from \"rx.mini\";\n\nconst log = debug(\"werift-ice:packages/ice/src/helper.ts\");\n\nexport function randomString(length: number) {\n  return randomBytes(length).toString(\"hex\").substring(0, length);\n}\n\nexport function randomTransactionId() {\n  return randomBytes(12);\n}\n\nexport function bufferXor(a: Buffer, b: Buffer): Buffer {\n  if (a.length !== b.length) {\n    throw new TypeError(\n      \"[webrtc-stun] You can not XOR buffers which length are different\"\n    );\n  }\n\n  const length = a.length;\n  const buffer = Buffer.allocUnsafe(length);\n\n  for (let i = 0; i < length; i++) {\n    buffer[i] = a[i] ^ b[i];\n  }\n\n  return buffer;\n}\n\nexport function difference<T>(x: Set<T>, y: Set<T>) {\n  return new Set([...x].filter((e) => !y.has(e)));\n}\n\n// infinite size queue\nexport class PQueue<T> {\n  private queue: Promise<T>[] = [];\n  private wait = new Event<[Promise<T>]>();\n\n  put(v: Promise<T>) {\n    this.queue.push(v);\n    if (this.queue.length === 1) {\n      this.wait.execute(v);\n    }\n  }\n\n  get(): Promise<T> {\n    const v = this.queue.shift();\n    if (!v) {\n      return new Promise((r) => {\n        this.wait.subscribe((v) => {\n          this.queue.shift();\n          r(v);\n        });\n      });\n    }\n    return v!;\n  }\n}\n\nexport const future = (pCancel: PCancelable<any>) => {\n  const state = { done: false };\n\n  const cancel = () => pCancel.cancel();\n\n  const done = () => state.done;\n\n  pCancel\n    .then(() => {\n      state.done = true;\n    })\n    .catch((error) => {\n      if (error !== \"cancel\") {\n        log(\"future\", error);\n      }\n    });\n\n  return { cancel, promise: pCancel, done };\n};\n\nexport type Future = ReturnType<typeof future>;\n"]}