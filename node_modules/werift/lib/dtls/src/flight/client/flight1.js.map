{"version":3,"file":"flight1.js","sourceRoot":"","sources":["../../../../../../dtls/src/flight/client/flight1.ts"],"names":[],"mappings":";;;AAAA,8CAAiD;AAIjD,gEAAmE;AACnE,mDAAoD;AAEpD,sCAAmC;AAEnC,MAAa,OAAQ,SAAQ,eAAM;IACjC,YACE,GAAqB,EACrB,IAAiB,EACT,MAAqB;QAE7B,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAFf,WAAM,GAAN,MAAM,CAAe;IAG/B,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,UAAuB;QAChC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,MAAM,IAAI,KAAK,EAAE,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAErB,MAAM,KAAK,GAAG,IAAI,mBAAW,CAC3B,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,EAAE,EAClC,IAAI,mBAAU,EAAE,EAChB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EACf,MAAM,CAAC,MAAM,CAAC,mBAAW,CAAC,EAC1B,CAAC,CAAC,CAAC,EAAE,iBAAiB;QACtB,UAAU,CACX,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,mBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAExD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC7D,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;AA7BD,0BA6BC","sourcesContent":["import { CipherSuite } from \"../../cipher/const\";\nimport { CipherContext } from \"../../context/cipher\";\nimport { DtlsContext } from \"../../context/dtls\";\nimport { TransportContext } from \"../../context/transport\";\nimport { ClientHello } from \"../../handshake/message/client/hello\";\nimport { DtlsRandom } from \"../../handshake/random\";\nimport { Extension } from \"../../typings/domain\";\nimport { Flight } from \"../flight\";\n\nexport class Flight1 extends Flight {\n  constructor(\n    udp: TransportContext,\n    dtls: DtlsContext,\n    private cipher: CipherContext\n  ) {\n    super(udp, dtls, 1, 3);\n  }\n\n  async exec(extensions: Extension[]) {\n    if (this.dtls.flight === 1) throw new Error();\n    this.dtls.flight = 1;\n\n    const hello = new ClientHello(\n      { major: 255 - 1, minor: 255 - 2 },\n      new DtlsRandom(),\n      Buffer.from([]),\n      Buffer.from([]),\n      Object.values(CipherSuite),\n      [0], // don't compress\n      extensions\n    );\n    this.dtls.version = hello.clientVersion;\n    this.cipher.localRandom = DtlsRandom.from(hello.random);\n\n    const packets = this.createPacket([hello]);\n    const buf = Buffer.concat(packets.map((v) => v.serialize()));\n    await this.transmit([buf]);\n  }\n}\n"]}