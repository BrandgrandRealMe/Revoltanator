{"version":3,"file":"changeCipherSpec.js","sourceRoot":"","sources":["../../../../../../dtls/src/handshake/message/changeCipherSpec.ts"],"names":[],"mappings":";;;AAAA,6CAAoD;AAEpD,oCAAoC;AAEpC,MAAa,gBAAgB;IAK3B,YAAmB,OAAO,CAAC;QAAR,SAAI,GAAJ,IAAI,CAAI;IAAG,CAAC;IAE/B,MAAM,CAAC,WAAW;QAChB,OAAO,IAAI,gBAAgB,EAAE,CAAC;IAChC,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,GAAW;QAC5B,OAAO,IAAI,gBAAgB;QACzB,YAAY;QACZ,GAAG,MAAM,CAAC,MAAM,CAAC,oBAAM,CAAC,GAAG,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAG,oBAAM,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QACxD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;;AArBH,4CAsBC;AArBiB,qBAAI,GAAG;IACrB,IAAI,EAAE,mBAAK,CAAC,KAAK;CAClB,CAAC","sourcesContent":["import { decode, encode, types } from \"binary-data\";\n\n// 7.1.  Change Cipher Spec Protocol\n\nexport class ChangeCipherSpec {\n  static readonly spec = {\n    type: types.uint8,\n  };\n\n  constructor(public type = 1) {}\n\n  static createEmpty() {\n    return new ChangeCipherSpec();\n  }\n\n  static deSerialize(buf: Buffer) {\n    return new ChangeCipherSpec(\n      //@ts-ignore\n      ...Object.values(decode(buf, ChangeCipherSpec.spec))\n    );\n  }\n\n  serialize() {\n    const res = encode(this, ChangeCipherSpec.spec).slice();\n    return Buffer.from(res);\n  }\n}\n"]}