{"version":3,"file":"helloDone.js","sourceRoot":"","sources":["../../../../../../../dtls/src/handshake/message/server/helloDone.ts"],"names":[],"mappings":";;;AAAA,6CAA6C;AAE7C,+DAAuE;AAEvE,uCAA4C;AAE5C,4BAA4B;AAE5B,MAAa,eAAe;IAA5B;QACE,YAAO,GAAG,qBAAa,CAAC,oBAAoB,CAAC;IA+B/C,CAAC;IA3BC,MAAM,CAAC,WAAW;QAChB,OAAO,IAAI,eAAe,EAAE,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,GAAW;QAC5B,OAAO,IAAI,eAAe;QACxB,YAAY;QACZ,GAAG,MAAM,CAAC,MAAM,CAAC,oBAAM,CAAC,GAAG,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAG,oBAAM,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;QACvD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,UAAU;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC9B,OAAO,IAAI,8BAAmB,CAC5B,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAW,EAChB,CAAC,EACD,IAAI,CAAC,MAAM,EACX,IAAI,CACL,CAAC;IACJ,CAAC;;AA/BH,0CAgCC;AA7BiB,oBAAI,GAAG,EAAE,CAAC","sourcesContent":["import { decode, encode } from \"binary-data\";\n\nimport { FragmentedHandshake } from \"../../../record/message/fragment\";\nimport { Handshake } from \"../../../typings/domain\";\nimport { HandshakeType } from \"../../const\";\n\n// 7.4.5.  Server Hello Done\n\nexport class ServerHelloDone implements Handshake {\n  msgType = HandshakeType.server_hello_done_14;\n  messageSeq?: number;\n  static readonly spec = {};\n\n  static createEmpty() {\n    return new ServerHelloDone();\n  }\n\n  static deSerialize(buf: Buffer) {\n    return new ServerHelloDone(\n      //@ts-ignore\n      ...Object.values(decode(buf, ServerHelloDone.spec))\n    );\n  }\n\n  serialize() {\n    const res = encode(this, ServerHelloDone.spec).slice();\n    return Buffer.from(res);\n  }\n\n  toFragment() {\n    const body = this.serialize();\n    return new FragmentedHandshake(\n      this.msgType,\n      body.length,\n      this.messageSeq!,\n      0,\n      body.length,\n      body\n    );\n  }\n}\n"]}