{"version":3,"file":"abstract.js","sourceRoot":"","sources":["../../../../../../dtls/src/cipher/suites/abstract.ts"],"names":[],"mappings":";;;AASa,QAAA,WAAW,GAAG;IACzB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;CACD,CAAC;AAGX,MAA8B,cAAc;IAA5C;QACE,OAAE,GAAG,CAAC,CAAC;QAGP,qBAAgB,GAAG,EAAE,CAAC;IAmCxB,CAAC;IA9BC;;;OAGG;IACH,IAAI,CAAC,GAAG,IAAS;QACf,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,GAAG,IAAS;QAClB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,GAAG,IAAS;QAClB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;CACF;AAvCD,iCAuCC","sourcesContent":["import { KeyExchange } from \"../key-exchange\";\n\nexport type CipherHeader = {\n  type: number;\n  version: number;\n  epoch: number;\n  sequenceNumber: number;\n};\n\nexport const SessionType = {\n  CLIENT: 1,\n  SERVER: 2,\n} as const;\nexport type SessionTypes = typeof SessionType[keyof typeof SessionType];\n\nexport default abstract class AbstractCipher {\n  id = 0;\n  name?: string;\n  hashAlgorithm?: string;\n  verifyDataLength = 12;\n\n  blockAlgorithm?: string;\n  kx?: KeyExchange;\n\n  /**\n   * Init cipher.\n   * @abstract\n   */\n  init(...args: any) {\n    throw new Error(\"not implemented\");\n  }\n\n  /**\n   * Encrypts data.\n   * @abstract\n   */\n  encrypt(...args: any): Buffer {\n    throw new Error(\"not implemented\");\n  }\n\n  /**\n   * Decrypts data.\n   * @abstract\n   */\n  decrypt(...args: any): Buffer {\n    throw new Error(\"not implemented\");\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this.name;\n  }\n}\n"]}