{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/core/index.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAsBzC,MAAa,KAAK;IAAlB;QACE;;;;mBAA2B;gBACzB,KAAK,EAAE,EAAE;gBACT,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC;aACX;WAAC;QACF;;;;mBAAQ,KAAK;WAAC;QACd;;;;mBAAU,CAAC,CAAM,EAAE,EAAE,GAAE,CAAC;WAAC;QACzB;;;;mBAAY,IAAI,sBAAY,EAAE;WAAC;QAE/B;;;;mBAAU,CAAC,GAAG,IAAO,EAAE,EAAE;gBACvB,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBACnC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;iBACvB;gBAED,IAAI,CAAC,SAAS;qBACX,IAAI,CAAC,KAAK,IAAI,EAAE;oBACf,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;wBAC1C,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC;qBACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;oBACX,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC;WAAC;QAEF;;;;mBAAW,GAAG,EAAE;gBACd,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBACjC,IAAI,IAAI,CAAC,QAAQ;wBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACpC;gBACD,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC;WAAC;QAEF;;;;mBAAQ,CAAC,CAAM,EAAE,EAAE;gBACjB,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBACjC,IAAI,IAAI,CAAC,KAAK;wBAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC/B;gBACD,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC;WAAC;QAEF;;;;mBAAiB,GAAG,EAAE;gBACpB,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,IAAI,CAAC,KAAK,GAAG;oBACX,KAAK,EAAE,EAAE;oBACT,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,CAAC;iBACX,CAAC;YACJ,CAAC;WAAC;QAEF;;;;mBAAY,CACV,OAAwB,EACxB,QAAwB,EACxB,KAAkB,EAClB,EAAE;gBACF,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAErB,MAAM,WAAW,GAAG,GAAG,EAAE;oBACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACxC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CACjC,CAAC;gBACJ,CAAC,CAAC;gBAEF,MAAM,QAAQ,GAAG,CAAC,QAAuB,EAAE,EAAE;oBAC3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,CAAC,CAAC;gBAEF,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;YACnC,CAAC;WAAC;QAEF;;;;mBAAmB,CACjB,OAA+B,EAC/B,QAAwB,EACxB,KAAkB,EAClB,EAAE;gBACF,IAAI,IAAI,CAAC,KAAK;oBAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAEnD,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;gBAC/D,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAErB,MAAM,WAAW,GAAG,GAAG,EAAE;oBACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACxC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CACjC,CAAC;gBACJ,CAAC,CAAC;gBAEF,MAAM,QAAQ,GAAG,CAAC,QAAuB,EAAE,EAAE;oBAC3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,CAAC,CAAC;gBAEF,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC;YACnC,CAAC;WAAC;QAEF;;;;mBAAO,CACL,OAAwB,EACxB,QAAwB,EACxB,KAAkB,EAClB,EAAE;gBACF,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CACxB,CAAC,GAAG,IAAI,EAAE,EAAE;oBACV,GAAG,CAAC,WAAW,EAAE,CAAC;oBAClB,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;gBACnB,CAAC,EACD,QAAQ,EACR,KAAK,CACN,CAAC;YACJ,CAAC;WAAC;QAEF;;;;mBAAQ,CAAC,EAA2B,EAAE,SAAkB,EAAE,EAAE,CAC1D,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACjC,MAAM,OAAO,GACX,SAAS;oBACT,UAAU,CAAC,GAAG,EAAE;wBACd,MAAM,CAAC,qBAAqB,CAAC,CAAC;oBAChC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAEhB,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE;oBACjD,MAAM,IAAI,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;oBACzB,IAAI,IAAI,EAAE;wBACR,IAAI,OAAO;4BAAE,YAAY,CAAC,OAAO,CAAC,CAAC;wBACnC,WAAW,EAAE,CAAC;wBACd,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;WAAC;QAEL;;;;mBAAY,CAAC,SAAkB,EAAE,EAAE,CACjC,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACjC,MAAM,OAAO,GACX,SAAS;oBACT,UAAU,CAAC,GAAG,EAAE;wBACd,MAAM,CAAC,yBAAyB,CAAC,CAAC;oBACpC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAEhB,IAAI,CAAC,IAAI,CACP,CAAC,GAAG,IAAI,EAAE,EAAE;oBACV,IAAI,OAAO;wBAAE,YAAY,CAAC,OAAO,CAAC,CAAC;oBACnC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,EACD,GAAG,EAAE;oBACH,IAAI,OAAO;wBAAE,YAAY,CAAC,OAAO,CAAC,CAAC;oBACnC,OAAO,CAAC,EAAS,CAAC,CAAC;gBACrB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,OAAO;wBAAE,YAAY,CAAC,OAAO,CAAC,CAAC;oBACnC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CACF,CAAC;YACJ,CAAC,CAAC;WAAC;IAeP,CAAC;IAbC,IAAI,aAAa;QACf,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAC1C,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,cAAc;QAChB,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC5C,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IACxC,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IACjC,CAAC;CACF;AA/KD,sBA+KC;AAED,MAAa,aAAa;IAA1B;QACE;;;;mBAAoC,EAAE;WAAC;IAUzC,CAAC;IARC,IAAI,CAAC,QAAoB;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;CACF;AAXD,sCAWC","sourcesContent":["import { PromiseQueue } from \"./promise\";\n\ntype EventExecute<T extends any[]> = (...args: T) => void;\ntype PromiseEventExecute<T extends any[]> = (...args: T) => Promise<void>;\ntype EventComplete = () => void;\ntype EventError = (e: any) => void;\ntype IEvent<T extends any[]> = {\n  stack: {\n    execute: EventExecute<T>;\n    complete?: EventComplete;\n    error?: EventError;\n    id: number;\n  }[];\n  promiseStack: {\n    execute: PromiseEventExecute<T>;\n    complete?: EventComplete;\n    error?: EventError;\n    id: number;\n  }[];\n  eventId: number;\n};\n\nexport class Event<T extends any[]> {\n  private event: IEvent<T> = {\n    stack: [],\n    promiseStack: [],\n    eventId: 0,\n  };\n  ended = false;\n  onerror = (e: any) => {};\n  taskQueue = new PromiseQueue();\n\n  execute = (...args: T) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (const item of this.event.stack) {\n      item.execute(...args);\n    }\n\n    this.taskQueue\n      .push(async () => {\n        for (const item of this.event.promiseStack) {\n          await item.execute(...args);\n        }\n      })\n      .catch((e) => {\n        this.onerror(e);\n      });\n  };\n\n  complete = () => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (let item of this.event.stack) {\n      if (item.complete) item.complete();\n    }\n    this.allUnsubscribe();\n    this.ended = true;\n  };\n\n  error = (e: any) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    for (let item of this.event.stack) {\n      if (item.error) item.error(e);\n    }\n    this.allUnsubscribe();\n  };\n\n  allUnsubscribe = () => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    this.event = {\n      stack: [],\n      promiseStack: [],\n      eventId: 0,\n    };\n  };\n\n  subscribe = (\n    execute: EventExecute<T>,\n    complete?: EventComplete,\n    error?: EventError\n  ) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    const id = this.event.eventId;\n    this.event.stack.push({ execute, id, complete, error });\n    this.event.eventId++;\n\n    const unSubscribe = () => {\n      this.event.stack = this.event.stack.filter(\n        (item) => item.id !== id && item\n      );\n    };\n\n    const disposer = (disposer: EventDisposer) => {\n      disposer.push(unSubscribe);\n    };\n\n    return { unSubscribe, disposer };\n  };\n\n  queuingSubscribe = (\n    execute: PromiseEventExecute<T>,\n    complete?: EventComplete,\n    error?: EventError\n  ) => {\n    if (this.ended) throw new Error(\"event completed\");\n\n    const id = this.event.eventId;\n    this.event.promiseStack.push({ execute, id, complete, error });\n    this.event.eventId++;\n\n    const unSubscribe = () => {\n      this.event.stack = this.event.stack.filter(\n        (item) => item.id !== id && item\n      );\n    };\n\n    const disposer = (disposer: EventDisposer) => {\n      disposer.push(unSubscribe);\n    };\n\n    return { unSubscribe, disposer };\n  };\n\n  once = (\n    execute: EventExecute<T>,\n    complete?: EventComplete,\n    error?: EventError\n  ) => {\n    const off = this.subscribe(\n      (...args) => {\n        off.unSubscribe();\n        execute(...args);\n      },\n      complete,\n      error\n    );\n  };\n\n  watch = (cb: (...args: T) => boolean, timeLimit?: number) =>\n    new Promise<T>((resolve, reject) => {\n      const timeout =\n        timeLimit &&\n        setTimeout(() => {\n          reject(\"Event watch timeout\");\n        }, timeLimit);\n\n      const { unSubscribe } = this.subscribe((...args) => {\n        const done = cb(...args);\n        if (done) {\n          if (timeout) clearTimeout(timeout);\n          unSubscribe();\n          resolve(args);\n        }\n      });\n    });\n\n  asPromise = (timeLimit?: number) =>\n    new Promise<T>((resolve, reject) => {\n      const timeout =\n        timeLimit &&\n        setTimeout(() => {\n          reject(\"Event asPromise timeout\");\n        }, timeLimit);\n\n      this.once(\n        (...args) => {\n          if (timeout) clearTimeout(timeout);\n          resolve(args);\n        },\n        () => {\n          if (timeout) clearTimeout(timeout);\n          resolve([] as any);\n        },\n        (err) => {\n          if (timeout) clearTimeout(timeout);\n          reject(err);\n        }\n      );\n    });\n\n  get returnTrigger() {\n    const { execute, error, complete } = this;\n    return { execute, error, complete };\n  }\n\n  get returnListener() {\n    const { subscribe, once, asPromise } = this;\n    return { subscribe, once, asPromise };\n  }\n\n  get length() {\n    return this.event.stack.length;\n  }\n}\n\nexport class EventDisposer {\n  private _disposer: (() => void)[] = [];\n\n  push(disposer: () => void) {\n    this._disposer.push(disposer);\n  }\n\n  dispose() {\n    this._disposer.forEach((d) => d());\n    this._disposer = [];\n  }\n}\n"]}