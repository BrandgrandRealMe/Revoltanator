{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../src/extensions/wait/test.ts"],"names":[],"mappings":";;;;;AAAA,yCAAqB;AAErB,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE;IACtB,MAAM,IAAI,GAAG,IAAI,UAAI,EAAY,CAAC;IAClC,MAAM,OAAO,CAAC,GAAG,CAAC;QAChB,IAAI,OAAO,CAAO,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CACzC,MAAM,EACN,GAAG,EAAE,CAAC,IAAI,OAAO,CAAW,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CACzE,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9B,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC,EAAE,CAAC;aACL;QACH,CAAC,CAAC;QACF,IAAI,OAAO,CAAO,KAAK,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CACzC,MAAM,EACN,GAAG,EAAE,CACH,IAAI,OAAO,CAAW,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CACtE,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/B,IAAI,KAAK,EAAE;gBACT,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,SAAS,EAAE,CAAC;gBACpC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/B,CAAC,EAAE,CAAC;aACL;QACH,CAAC,CAAC;KACH,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import Wait from \".\";\n\ntest(\"wait\", async () => {\n  const wait = new Wait<[string]>();\n  await Promise.all([\n    new Promise<void>(async (r) => {\n      const { exist, result } = await wait.create(\n        \"test\",\n        () => new Promise<[string]>((r) => setTimeout(() => r([\"solve\"]), 1000))\n      );\n      expect(exist).toBe(undefined);\n      if (result) {\n        expect(result).toEqual([\"solve\"]);\n        r();\n      }\n    }),\n    new Promise<void>(async (r) => {\n      const { exist, result } = await wait.create(\n        \"test\",\n        () =>\n          new Promise<[string]>((r) => setTimeout(() => r([\"solve2\"]), 1000))\n      );\n      expect(result).toBe(undefined);\n      if (exist) {\n        const res = await exist.asPromise();\n        expect(res).toEqual([\"solve\"]);\n        r();\n      }\n    }),\n  ]);\n});\n"]}