968704e645e75e73d109fb0ac73e4b93
'use strict';

/* istanbul ignore next */var cov_9hcoo39l5 = function () {
  var path = '/home/dtsvet/develop/projects/binary-data/src/node_modules/internal/buffer-list.js',
      hash = '00ea52728601ccc109554205303a92b3a673181f',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/home/dtsvet/develop/projects/binary-data/src/node_modules/internal/buffer-list.js',
    statementMap: {
      '0': {
        start: {
          line: 3,
          column: 23
        },
        end: {
          line: 3,
          column: 51
        }
      },
      '1': {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 50
        }
      },
      '2': {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 34
        }
      },
      '3': {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 20
        }
      },
      '4': {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 43
        }
      },
      '5': {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      '6': {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 37,
          column: 7
        }
      },
      '7': {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 39
        }
      },
      '8': {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 52
        }
      },
      '9': {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 24
        }
      },
      '10': {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 27
        }
      },
      '11': {
        start: {
          line: 40,
          column: 11
        },
        end: {
          line: 44,
          column: 5
        }
      },
      '12': {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 43,
          column: 7
        }
      },
      '13': {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      },
      '14': {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 17
        }
      },
      '15': {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      '16': {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 23
        }
      },
      '17': {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      '18': {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 23
        }
      },
      '19': {
        start: {
          line: 64,
          column: 15
        },
        end: {
          line: 64,
          column: 30
        }
      },
      '20': {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 25
        }
      },
      '21': {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      '22': {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 70,
          column: 7
        }
      },
      '23': {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 39
        }
      },
      '24': {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 39
        }
      },
      '25': {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 17
        }
      },
      '26': {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 23
        }
      },
      '27': {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      '28': {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 16
        }
      },
      '29': {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      '30': {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 24
        }
      },
      '31': {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      '32': {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 27
        }
      },
      '33': {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      '34': {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 25
        }
      },
      '35': {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 37
        }
      },
      '36': {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      '37': {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 29
        }
      },
      '38': {
        start: {
          line: 109,
          column: 21
        },
        end: {
          line: 109,
          column: 26
        }
      },
      '39': {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 36
        }
      },
      '40': {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 34
        }
      },
      '41': {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 75
        }
      },
      '42': {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      '43': {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 26
        }
      },
      '44': {
        start: {
          line: 120,
          column: 15
        },
        end: {
          line: 120,
          column: 26
        }
      },
      '45': {
        start: {
          line: 121,
          column: 19
        },
        end: {
          line: 121,
          column: 52
        }
      },
      '46': {
        start: {
          line: 122,
          column: 17
        },
        end: {
          line: 122,
          column: 18
        }
      },
      '47': {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      '48': {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 38
        }
      },
      '49': {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 35
        }
      },
      '50': {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 23
        }
      },
      '51': {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 18
        }
      },
      '52': {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 53
        }
      },
      '53': {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 25
        }
      },
      '54': {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      '55': {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 63
        }
      },
      '56': {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 163,
          column: 7
        }
      },
      '57': {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 27
        }
      },
      '58': {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 33
        }
      },
      '59': {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 24
        }
      },
      '60': {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 33
        }
      },
      '61': {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 14
        }
      },
      '62': {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      '63': {
        start: {
          line: 178,
          column: 6
        },
        end: {
          line: 178,
          column: 48
        }
      },
      '64': {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      '65': {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 44
        }
      },
      '66': {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      '67': {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 17
        }
      },
      '68': {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      '69': {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 28
        }
      },
      '70': {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      '71': {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 28
        }
      },
      '72': {
        start: {
          line: 197,
          column: 15
        },
        end: {
          line: 197,
          column: 30
        }
      },
      '73': {
        start: {
          line: 198,
          column: 15
        },
        end: {
          line: 198,
          column: 16
        }
      },
      '74': {
        start: {
          line: 200,
          column: 17
        },
        end: {
          line: 203,
          column: 5
        }
      },
      '75': {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 33
        }
      },
      '76': {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 23
        }
      },
      '77': {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      '78': {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 24
        }
      },
      '79': {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 210,
          column: 7
        }
      },
      '80': {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 34
        }
      },
      '81': {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      '82': {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 50
        }
      },
      '83': {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 15
        }
      },
      '84': {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 17
        }
      },
      '85': {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 222,
          column: 7
        }
      },
      '86': {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 29
        }
      },
      '87': {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 57
        }
      },
      '88': {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 228,
          column: 7
        }
      },
      '89': {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 42
        }
      },
      '90': {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 13
        }
      },
      '91': {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 234,
          column: 7
        }
      },
      '92': {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 19
        }
      },
      '93': {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 14
        }
      },
      '94': {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 257,
          column: 1
        }
      },
      '95': {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 276,
          column: 3
        }
      },
      '96': {
        start: {
          line: 260,
          column: 14
        },
        end: {
          line: 260,
          column: 30
        }
      },
      '97': {
        start: {
          line: 262,
          column: 2
        },
        end: {
          line: 273,
          column: 5
        }
      },
      '98': {
        start: {
          line: 275,
          column: 2
        },
        end: {
          line: 275,
          column: 50
        }
      },
      '99': {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 278,
          column: 78
        }
      },
      '100': {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 296,
          column: 3
        }
      },
      '101': {
        start: {
          line: 281,
          column: 14
        },
        end: {
          line: 281,
          column: 30
        }
      },
      '102': {
        start: {
          line: 283,
          column: 2
        },
        end: {
          line: 293,
          column: 5
        }
      },
      '103': {
        start: {
          line: 295,
          column: 2
        },
        end: {
          line: 295,
          column: 50
        }
      },
      '104': {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 313,
          column: 1
        }
      },
      '105': {
        start: {
          line: 315,
          column: 0
        },
        end: {
          line: 328,
          column: 3
        }
      },
      '106': {
        start: {
          line: 316,
          column: 14
        },
        end: {
          line: 316,
          column: 30
        }
      },
      '107': {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 325,
          column: 5
        }
      },
      '108': {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 327,
          column: 50
        }
      },
      '109': {
        start: {
          line: 330,
          column: 25
        },
        end: {
          line: 335,
          column: 1
        }
      },
      '110': {
        start: {
          line: 337,
          column: 0
        },
        end: {
          line: 349,
          column: 3
        }
      },
      '111': {
        start: {
          line: 338,
          column: 14
        },
        end: {
          line: 338,
          column: 30
        }
      },
      '112': {
        start: {
          line: 340,
          column: 2
        },
        end: {
          line: 346,
          column: 5
        }
      },
      '113': {
        start: {
          line: 348,
          column: 2
        },
        end: {
          line: 348,
          column: 50
        }
      },
      '114': {
        start: {
          line: 351,
          column: 0
        },
        end: {
          line: 351,
          column: 28
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 13
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 22
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 30
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 13
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 53
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 85,
            column: 2
          },
          end: {
            line: 85,
            column: 3
          }
        },
        loc: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 132,
            column: 3
          }
        },
        line: 85
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 141,
            column: 2
          },
          end: {
            line: 141,
            column: 3
          }
        },
        loc: {
          start: {
            line: 141,
            column: 33
          },
          end: {
            line: 143,
            column: 3
          }
        },
        line: 141
      },
      '6': {
        name: '(anonymous_6)',
        decl: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 149,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 165,
            column: 3
          }
        },
        line: 149
      },
      '7': {
        name: '(anonymous_7)',
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 28
          },
          end: {
            line: 239,
            column: 3
          }
        },
        line: 175
      },
      '8': {
        name: '(anonymous_8)',
        decl: {
          start: {
            line: 200,
            column: 17
          },
          end: {
            line: 200,
            column: 18
          }
        },
        loc: {
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 200
      },
      '9': {
        name: '(anonymous_9)',
        decl: {
          start: {
            line: 259,
            column: 38
          },
          end: {
            line: 259,
            column: 39
          }
        },
        loc: {
          start: {
            line: 259,
            column: 48
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 259
      },
      '10': {
        name: '(anonymous_10)',
        decl: {
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 280,
            column: 25
          }
        },
        loc: {
          start: {
            line: 280,
            column: 34
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 280
      },
      '11': {
        name: '(anonymous_11)',
        decl: {
          start: {
            line: 315,
            column: 39
          },
          end: {
            line: 315,
            column: 40
          }
        },
        loc: {
          start: {
            line: 315,
            column: 49
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 315
      },
      '12': {
        name: '(anonymous_12)',
        decl: {
          start: {
            line: 337,
            column: 25
          },
          end: {
            line: 337,
            column: 26
          }
        },
        loc: {
          start: {
            line: 337,
            column: 35
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 337
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 31
      },
      '1': {
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        }, {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        }],
        line: 32
      },
      '2': {
        loc: {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: 40,
            column: 11
          },
          end: {
            line: 44,
            column: 5
          }
        }],
        line: 40
      },
      '3': {
        loc: {
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        }, {
          start: {
            line: 68,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        }],
        line: 68
      },
      '4': {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }],
        line: 87
      },
      '5': {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }],
        line: 91
      },
      '6': {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }],
        line: 105
      },
      '7': {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 41
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 28
          }
        }, {
          start: {
            line: 105,
            column: 32
          },
          end: {
            line: 105,
            column: 41
          }
        }],
        line: 105
      },
      '8': {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }],
        line: 116
      },
      '9': {
        loc: {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        }, {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        }],
        line: 155
      },
      '10': {
        loc: {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 175,
            column: 26
          }
        },
        type: 'default-arg',
        locations: [{
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 175,
            column: 26
          }
        }],
        line: 175
      },
      '11': {
        loc: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }],
        line: 177
      },
      '12': {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }],
        line: 181
      },
      '13': {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 31
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 16
          }
        }, {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 181,
            column: 31
          }
        }],
        line: 181
      },
      '14': {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }],
        line: 185
      },
      '15': {
        loc: {
          start: {
            line: 208,
            column: 6
          },
          end: {
            line: 210,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 208,
            column: 6
          },
          end: {
            line: 210,
            column: 7
          }
        }, {
          start: {
            line: 208,
            column: 6
          },
          end: {
            line: 210,
            column: 7
          }
        }],
        line: 208
      },
      '16': {
        loc: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }, {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }],
        line: 213
      },
      '17': {
        loc: {
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        }, {
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        }],
        line: 220
      },
      '18': {
        loc: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 228,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 228,
            column: 7
          }
        }, {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 228,
            column: 7
          }
        }],
        line: 226
      },
      '19': {
        loc: {
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        }, {
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        }],
        line: 232
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0,
      '27': 0,
      '28': 0,
      '29': 0,
      '30': 0,
      '31': 0,
      '32': 0,
      '33': 0,
      '34': 0,
      '35': 0,
      '36': 0,
      '37': 0,
      '38': 0,
      '39': 0,
      '40': 0,
      '41': 0,
      '42': 0,
      '43': 0,
      '44': 0,
      '45': 0,
      '46': 0,
      '47': 0,
      '48': 0,
      '49': 0,
      '50': 0,
      '51': 0,
      '52': 0,
      '53': 0,
      '54': 0,
      '55': 0,
      '56': 0,
      '57': 0,
      '58': 0,
      '59': 0,
      '60': 0,
      '61': 0,
      '62': 0,
      '63': 0,
      '64': 0,
      '65': 0,
      '66': 0,
      '67': 0,
      '68': 0,
      '69': 0,
      '70': 0,
      '71': 0,
      '72': 0,
      '73': 0,
      '74': 0,
      '75': 0,
      '76': 0,
      '77': 0,
      '78': 0,
      '79': 0,
      '80': 0,
      '81': 0,
      '82': 0,
      '83': 0,
      '84': 0,
      '85': 0,
      '86': 0,
      '87': 0,
      '88': 0,
      '89': 0,
      '90': 0,
      '91': 0,
      '92': 0,
      '93': 0,
      '94': 0,
      '95': 0,
      '96': 0,
      '97': 0,
      '98': 0,
      '99': 0,
      '100': 0,
      '101': 0,
      '102': 0,
      '103': 0,
      '104': 0,
      '105': 0,
      '106': 0,
      '107': 0,
      '108': 0,
      '109': 0,
      '110': 0,
      '111': 0,
      '112': 0,
      '113': 0,
      '114': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0],
      '7': [0, 0],
      '8': [0, 0],
      '9': [0, 0],
      '10': [0],
      '11': [0, 0],
      '12': [0, 0],
      '13': [0, 0],
      '14': [0, 0],
      '15': [0, 0],
      '16': [0, 0],
      '17': [0, 0],
      '18': [0, 0],
      '19': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const createFunction = /* istanbul ignore next */(cov_9hcoo39l5.s[0]++, require('generate-function'));
const LinkedList = /* istanbul ignore next */(cov_9hcoo39l5.s[1]++, require('internal/linked-list'));

/**
 * An optimised partial implementation of Buffer list from `bl`.
 */
class BufferList {
  /**
   * @class
   */
  constructor() {
    /* istanbul ignore next */cov_9hcoo39l5.f[0]++;
    cov_9hcoo39l5.s[2]++;

    this.queue = new LinkedList();
    /* istanbul ignore next */cov_9hcoo39l5.s[3]++;
    this.offset = 0;
  }

  /**
   * The number of bytes in list.
   * @returns {number}
   */
  get length() {
    /* istanbul ignore next */cov_9hcoo39l5.f[1]++;
    cov_9hcoo39l5.s[4]++;

    return this.queue.length - this.offset;
  }

  /**
   * Adds an additional buffer or BufferList to the internal list.
   * @param {Buffer|Buffer[]} buf
   */
  append(buf) {
    /* istanbul ignore next */cov_9hcoo39l5.f[2]++;
    cov_9hcoo39l5.s[5]++;

    if (Buffer.isBuffer(buf)) {
      /* istanbul ignore next */cov_9hcoo39l5.b[0][0]++;
      cov_9hcoo39l5.s[6]++;

      if (this.offset > 0) {
        /* istanbul ignore next */cov_9hcoo39l5.b[1][0]++;

        const head = /* istanbul ignore next */(cov_9hcoo39l5.s[7]++, this.queue.shift());
        /* istanbul ignore next */cov_9hcoo39l5.s[8]++;
        this.queue.unshift(head.slice(this.offset));

        /* istanbul ignore next */cov_9hcoo39l5.s[9]++;
        this.offset = 0;
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[1][1]++;
      }

      cov_9hcoo39l5.s[10]++;
      this.queue.push(buf);
    } else {
        /* istanbul ignore next */cov_9hcoo39l5.b[0][1]++;
        cov_9hcoo39l5.s[11]++;
        if (Array.isArray(buf)) {
          /* istanbul ignore next */cov_9hcoo39l5.b[2][0]++;
          cov_9hcoo39l5.s[12]++;

          for (let i = 0; i < buf.length; i += 1) {
            /* istanbul ignore next */cov_9hcoo39l5.s[13]++;

            this.append(buf[i]);
          }
        } else /* istanbul ignore next */{
          cov_9hcoo39l5.b[2][1]++;
        }
      }
  }

  /* eslint-disable consistent-return */
  /**
   * Return the byte at the specified index.
   * @param {number} index Index of the byte in the Buffer list.
   * @returns {number}
   */
  get(index) {
    /* istanbul ignore next */cov_9hcoo39l5.f[3]++;

    let i = /* istanbul ignore next */(cov_9hcoo39l5.s[14]++, index);

    /* istanbul ignore next */cov_9hcoo39l5.s[15]++;
    while (i >= this.length) {
      /* istanbul ignore next */cov_9hcoo39l5.s[16]++;

      i -= this.length;
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[17]++;
    while (i < 0) {
      /* istanbul ignore next */cov_9hcoo39l5.s[18]++;

      i += this.length;
    }

    let leaf = /* istanbul ignore next */(cov_9hcoo39l5.s[19]++, this.queue.head);
    let { offset } = /* istanbul ignore next */(cov_9hcoo39l5.s[20]++, this);

    /* istanbul ignore next */cov_9hcoo39l5.s[21]++;
    while (leaf) {
      /* istanbul ignore next */cov_9hcoo39l5.s[22]++;

      if (leaf.buffer.length - offset > i) {
        /* istanbul ignore next */cov_9hcoo39l5.b[3][0]++;
        cov_9hcoo39l5.s[23]++;

        return leaf.buffer[i + offset];
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[3][1]++;
      }

      cov_9hcoo39l5.s[24]++;
      i -= leaf.buffer.length - offset;
      /* istanbul ignore next */cov_9hcoo39l5.s[25]++;
      offset = 0;
      /* istanbul ignore next */cov_9hcoo39l5.s[26]++;
      leaf = leaf.next;
    }
  }
  /* eslint-enable consistent-return */

  /**
   * Returns a new Buffer object containing the bytes within the range specified.
   * @param {number} start
   * @param {number} end
   * @returns {Buffer}
   */
  slice(start, end) {
    /* istanbul ignore next */cov_9hcoo39l5.f[4]++;
    cov_9hcoo39l5.s[27]++;

    /* eslint-disable no-param-reassign */
    if (typeof start !== 'number') {
      /* istanbul ignore next */cov_9hcoo39l5.b[4][0]++;
      cov_9hcoo39l5.s[28]++;

      start = 0;
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[4][1]++;
    }

    cov_9hcoo39l5.s[29]++;
    if (typeof end !== 'number') {
      /* istanbul ignore next */cov_9hcoo39l5.b[5][0]++;
      cov_9hcoo39l5.s[30]++;

      end = this.length;
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[5][1]++;
    }

    cov_9hcoo39l5.s[31]++;
    while (start < 0) {
      /* istanbul ignore next */cov_9hcoo39l5.s[32]++;

      start += this.length;
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[33]++;
    while (end < 0) {
      /* istanbul ignore next */cov_9hcoo39l5.s[34]++;

      end += this.length;
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[35]++;
    end = Math.min(end, this.length);

    /* istanbul ignore next */cov_9hcoo39l5.s[36]++;
    if ( /* istanbul ignore next */(cov_9hcoo39l5.b[7][0]++, start >= this.length) || /* istanbul ignore next */(cov_9hcoo39l5.b[7][1]++, end === 0)) {
      /* istanbul ignore next */cov_9hcoo39l5.b[6][0]++;
      cov_9hcoo39l5.s[37]++;

      return Buffer.alloc(0);
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[6][1]++;
    }

    const tmpStart = /* istanbul ignore next */(cov_9hcoo39l5.s[38]++, start);
    /* istanbul ignore next */cov_9hcoo39l5.s[39]++;
    start = Math.min(tmpStart, end);
    /* istanbul ignore next */cov_9hcoo39l5.s[40]++;
    end = Math.max(tmpStart, end);

    const subset = /* istanbul ignore next */(cov_9hcoo39l5.s[41]++, this.queue.slice(start + this.offset, end + this.offset));

    // Buffer.concat() doesn't have optimization for count == 1
    /* istanbul ignore next */cov_9hcoo39l5.s[42]++;
    if (subset.count === 1) {
      /* istanbul ignore next */cov_9hcoo39l5.b[8][0]++;
      cov_9hcoo39l5.s[43]++;

      return subset.first;
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[8][1]++;
    }

    let leaf = /* istanbul ignore next */(cov_9hcoo39l5.s[44]++, subset.head);
    const target = /* istanbul ignore next */(cov_9hcoo39l5.s[45]++, Buffer.allocUnsafe(subset.length));
    let offset = /* istanbul ignore next */(cov_9hcoo39l5.s[46]++, 0);

    /* istanbul ignore next */cov_9hcoo39l5.s[47]++;
    for (let i = 0; i < subset.count; i += 1) {
      /* istanbul ignore next */cov_9hcoo39l5.s[48]++;

      target.set(leaf.buffer, offset);
      /* istanbul ignore next */cov_9hcoo39l5.s[49]++;
      offset += leaf.buffer.length;
      /* istanbul ignore next */cov_9hcoo39l5.s[50]++;
      leaf = leaf.next;
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[51]++;
    return target;
    /* eslint-enable no-param-reassign */
  }

  /**
   * Return a string representation of the buffer.
   * @param {string} encoding
   * @param {number} start
   * @param {number} end
   * @returns {string}
   */
  toString(encoding, start, end) {
    /* istanbul ignore next */cov_9hcoo39l5.f[5]++;
    cov_9hcoo39l5.s[52]++;

    return this.slice(start, end).toString(encoding);
  }

  /**
   * Shift bytes off the start of the list.
   * @param {number} bytes
   */
  consume(bytes) {
    /* istanbul ignore next */cov_9hcoo39l5.f[6]++;

    let remainder = /* istanbul ignore next */(cov_9hcoo39l5.s[53]++, bytes);

    /* istanbul ignore next */cov_9hcoo39l5.s[54]++;
    while (this.length > 0) {
      const firstLength = /* istanbul ignore next */(cov_9hcoo39l5.s[55]++, this.queue.first.length - this.offset);

      /* istanbul ignore next */cov_9hcoo39l5.s[56]++;
      if (remainder >= firstLength) {
        /* istanbul ignore next */cov_9hcoo39l5.b[9][0]++;
        cov_9hcoo39l5.s[57]++;

        this.queue.shift();

        /* istanbul ignore next */cov_9hcoo39l5.s[58]++;
        remainder -= firstLength;
        /* istanbul ignore next */cov_9hcoo39l5.s[59]++;
        this.offset = 0;
      } else {
        /* istanbul ignore next */cov_9hcoo39l5.b[9][1]++;
        cov_9hcoo39l5.s[60]++;

        this.offset += remainder;
        /* istanbul ignore next */cov_9hcoo39l5.s[61]++;
        break;
      }
    }
  }

  /**
   * Returns the first (least) index of an element
   * within the list equal to the specified value,
   * or -1 if none is found.
   * @param {number} byte
   * @param {number} [offset]
   * @returns {number}
   */
  indexOf(byte, offset = /* istanbul ignore next */(cov_9hcoo39l5.b[10][0]++, 0)) {
    /* istanbul ignore next */cov_9hcoo39l5.f[7]++;
    cov_9hcoo39l5.s[62]++;

    /* eslint-disable no-param-reassign */
    if (!Number.isInteger(byte)) {
      /* istanbul ignore next */cov_9hcoo39l5.b[11][0]++;
      cov_9hcoo39l5.s[63]++;

      throw new TypeError('Invalid argument 1');
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[11][1]++;
    }

    cov_9hcoo39l5.s[64]++;
    if ( /* istanbul ignore next */(cov_9hcoo39l5.b[13][0]++, byte < 0) || /* istanbul ignore next */(cov_9hcoo39l5.b[13][1]++, byte > 0xff)) {
      /* istanbul ignore next */cov_9hcoo39l5.b[12][0]++;
      cov_9hcoo39l5.s[65]++;

      throw new Error('Invalid argument 1');
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[12][1]++;
    }

    cov_9hcoo39l5.s[66]++;
    if (!Number.isInteger(offset)) {
      /* istanbul ignore next */cov_9hcoo39l5.b[14][0]++;
      cov_9hcoo39l5.s[67]++;

      offset = 0;
    } else /* istanbul ignore next */{
      cov_9hcoo39l5.b[14][1]++;
    }

    cov_9hcoo39l5.s[68]++;
    while (offset >= this.length) {
      /* istanbul ignore next */cov_9hcoo39l5.s[69]++;

      offset -= this.length;
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[70]++;
    while (offset < 0) {
      /* istanbul ignore next */cov_9hcoo39l5.s[71]++;

      offset += this.length;
    }

    let leaf = /* istanbul ignore next */(cov_9hcoo39l5.s[72]++, this.queue.head);
    let bias = /* istanbul ignore next */(cov_9hcoo39l5.s[73]++, 0);

    /* istanbul ignore next */cov_9hcoo39l5.s[74]++;
    const next = () => {
      /* istanbul ignore next */cov_9hcoo39l5.f[8]++;
      cov_9hcoo39l5.s[75]++;

      bias += leaf.buffer.length;
      /* istanbul ignore next */cov_9hcoo39l5.s[76]++;
      leaf = leaf.next;
    };

    /* istanbul ignore next */cov_9hcoo39l5.s[77]++;
    while (leaf) {
      let byteOffset = /* istanbul ignore next */(cov_9hcoo39l5.s[78]++, 0);

      /* istanbul ignore next */cov_9hcoo39l5.s[79]++;
      if (leaf === this.queue.head) {
        /* istanbul ignore next */cov_9hcoo39l5.b[15][0]++;
        cov_9hcoo39l5.s[80]++;

        byteOffset += this.offset;
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[15][1]++;
      }

      // `offset` is point to next chunk
      cov_9hcoo39l5.s[81]++;
      if (offset >= leaf.buffer.length - byteOffset) {
        /* istanbul ignore next */cov_9hcoo39l5.b[16][0]++;
        cov_9hcoo39l5.s[82]++;

        offset -= leaf.buffer.length - byteOffset;
        /* istanbul ignore next */cov_9hcoo39l5.s[83]++;
        next();
        /* istanbul ignore next */cov_9hcoo39l5.s[84]++;
        continue; // eslint-disable-line no-continue
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[16][1]++;
      }

      // `offset` is point to current chunk
      cov_9hcoo39l5.s[85]++;
      if (offset < leaf.buffer.length) {
        /* istanbul ignore next */cov_9hcoo39l5.b[17][0]++;
        cov_9hcoo39l5.s[86]++;

        byteOffset += offset;
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[17][1]++;
      }

      const index = /* istanbul ignore next */(cov_9hcoo39l5.s[87]++, leaf.buffer.indexOf(byte, byteOffset));

      /* istanbul ignore next */cov_9hcoo39l5.s[88]++;
      if (index > -1) {
        /* istanbul ignore next */cov_9hcoo39l5.b[18][0]++;
        cov_9hcoo39l5.s[89]++;

        return index + bias - this.offset;
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[18][1]++;
      }

      cov_9hcoo39l5.s[90]++;
      next();

      /* istanbul ignore next */cov_9hcoo39l5.s[91]++;
      if (byteOffset > this.offset) {
        /* istanbul ignore next */cov_9hcoo39l5.b[19][0]++;
        cov_9hcoo39l5.s[92]++;

        offset = 0;
      } else /* istanbul ignore next */{
        cov_9hcoo39l5.b[19][1]++;
      }
    }

    /* istanbul ignore next */cov_9hcoo39l5.s[93]++;
    return -1;
    /* eslint-enable no-param-reassign */
  }
}

const fixedReadMethods = /* istanbul ignore next */(cov_9hcoo39l5.s[94]++, {
  readDoubleBE: 8,
  readDoubleLE: 8,
  readFloatBE: 4,
  readFloatLE: 4,
  readInt32BE: 4,
  readInt32LE: 4,
  readUInt32BE: 4,
  readUInt32LE: 4,
  readInt16BE: 2,
  readInt16LE: 2,
  readUInt16BE: 2,
  readUInt16LE: 2,
  readInt8: 1,
  readUInt8: 1
});

/* istanbul ignore next */cov_9hcoo39l5.s[95]++;
Object.keys(fixedReadMethods).forEach(method => {
  /* istanbul ignore next */cov_9hcoo39l5.f[9]++;

  const gen = /* istanbul ignore next */(cov_9hcoo39l5.s[96]++, createFunction());

  /* istanbul ignore next */cov_9hcoo39l5.s[97]++;
  gen(`
    function bufferlist_${method}(offset = 0) {
      const start = offset + this.offset;
      const head = this.queue.first;
      const size = ${gen.formats.d(fixedReadMethods[method])};
      const isFirtsChunkEnough = head.length - start >= size;

      return isFirtsChunkEnough
        ? head.${method}(start)
        : this.slice(offset, offset + size).${method}(0)
    }
  `);

  /* istanbul ignore next */cov_9hcoo39l5.s[98]++;
  BufferList.prototype[method] = gen.toFunction();
});

const metaReadMethods = /* istanbul ignore next */(cov_9hcoo39l5.s[99]++, ['readIntBE', 'readIntLE', 'readUIntBE', 'readUIntLE']);

/* istanbul ignore next */cov_9hcoo39l5.s[100]++;
metaReadMethods.forEach(method => {
  /* istanbul ignore next */cov_9hcoo39l5.f[10]++;

  const gen = /* istanbul ignore next */(cov_9hcoo39l5.s[101]++, createFunction());

  /* istanbul ignore next */cov_9hcoo39l5.s[102]++;
  gen(`
    function bufferlist_${method}(size, offset = 0) {
      const start = offset + this.offset;
      const head = this.queue.first;
      const isFirtsChunkEnough = head.length - start >= size;

      return isFirtsChunkEnough
        ? head.${method}(start, size)
        : this.slice(offset, offset + size).${method}(0, size)
    }
  `);

  /* istanbul ignore next */cov_9hcoo39l5.s[103]++;
  BufferList.prototype[method] = gen.toFunction();
});

const fixedWriteMethods = /* istanbul ignore next */(cov_9hcoo39l5.s[104]++, {
  writeDoubleBE: 8,
  writeDoubleLE: 8,
  writeFloatBE: 4,
  writeFloatLE: 4,
  writeInt32BE: 4,
  writeInt32LE: 4,
  writeUInt32BE: 4,
  writeUInt32LE: 4,
  writeInt16BE: 2,
  writeInt16LE: 2,
  writeUInt16BE: 2,
  writeUInt16LE: 2,
  writeInt8: 1,
  writeUInt8: 1
});

/* istanbul ignore next */cov_9hcoo39l5.s[105]++;
Object.keys(fixedWriteMethods).forEach(method => {
  /* istanbul ignore next */cov_9hcoo39l5.f[11]++;

  const gen = /* istanbul ignore next */(cov_9hcoo39l5.s[106]++, createFunction());

  /* istanbul ignore next */cov_9hcoo39l5.s[107]++;
  gen(`
    function bufferlist_${method}(value) {
      const size = ${gen.formats.d(fixedWriteMethods[method])};
      const buf = Buffer.allocUnsafe(size);
      buf.${method}(value, 0);
      this.append(buf);
    }
  `);

  /* istanbul ignore next */cov_9hcoo39l5.s[108]++;
  BufferList.prototype[method] = gen.toFunction();
});

const metaWriteMethods = /* istanbul ignore next */(cov_9hcoo39l5.s[109]++, ['writeIntBE', 'writeIntLE', 'writeUIntBE', 'writeUIntLE']);

/* istanbul ignore next */cov_9hcoo39l5.s[110]++;
metaWriteMethods.forEach(method => {
  /* istanbul ignore next */cov_9hcoo39l5.f[12]++;

  const gen = /* istanbul ignore next */(cov_9hcoo39l5.s[111]++, createFunction());

  /* istanbul ignore next */cov_9hcoo39l5.s[112]++;
  gen(`
    function bufferlist_${method}(value, size) {
      const buf = Buffer.allocUnsafe(size);
      buf.${method}(value, 0, size);
      this.append(buf);
    }
  `);

  /* istanbul ignore next */cov_9hcoo39l5.s[113]++;
  BufferList.prototype[method] = gen.toFunction();
});

/* istanbul ignore next */cov_9hcoo39l5.s[114]++;
module.exports = BufferList;