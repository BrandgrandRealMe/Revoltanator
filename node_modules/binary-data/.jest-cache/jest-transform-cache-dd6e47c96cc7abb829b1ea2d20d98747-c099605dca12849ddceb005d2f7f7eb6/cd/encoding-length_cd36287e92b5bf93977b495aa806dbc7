d5f56bf575818b7d8ba6bf8ffbd1cda8
'use strict';

const { encodingLength } = require('lib/encoding-length');

describe('encodingLength', () => {
  test('should use schema', () => {
    const expectedSize = 5;

    const schema = {
      a: {
        encode() {},
        decode() {},
        encodingLength: jest.fn().mockImplementation(() => expectedSize)
      }
    };

    const obj = {
      a: 1
    };

    expect(encodingLength(obj, schema)).toBe(expectedSize);
    expect(schema.a.encodingLength).toBeCalled();
  });

  test('should support nested schemas', () => {
    const expectedSize = 5;

    const schema = {
      a: {
        encode() {},
        decode() {},
        encodingLength: jest.fn().mockImplementation(() => expectedSize)
      },
      b: {
        c: {
          encode() {},
          decode() {},
          encodingLength: jest.fn().mockImplementation(() => expectedSize)
        }
      }
    };

    const obj = {
      a: 1,
      b: {
        c: 15
      }
    };

    expect(encodingLength(obj, schema)).toBe(expectedSize * 2);
    expect(schema.a.encodingLength).toHaveBeenLastCalledWith(obj.a);
    expect(schema.b.c.encodingLength).toHaveBeenLastCalledWith(obj.b.c);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY29kaW5nLWxlbmd0aC5qcyJdLCJuYW1lcyI6WyJlbmNvZGluZ0xlbmd0aCIsInJlcXVpcmUiLCJkZXNjcmliZSIsInRlc3QiLCJleHBlY3RlZFNpemUiLCJzY2hlbWEiLCJhIiwiZW5jb2RlIiwiZGVjb2RlIiwiamVzdCIsImZuIiwibW9ja0ltcGxlbWVudGF0aW9uIiwib2JqIiwiZXhwZWN0IiwidG9CZSIsInRvQmVDYWxsZWQiLCJiIiwiYyIsInRvSGF2ZUJlZW5MYXN0Q2FsbGVkV2l0aCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTSxFQUFFQSxjQUFGLEtBQXFCQyxRQUFRLHFCQUFSLENBQTNCOztBQUVBQyxTQUFTLGdCQUFULEVBQTJCLE1BQU07QUFDL0JDLE9BQUssbUJBQUwsRUFBMEIsTUFBTTtBQUM5QixVQUFNQyxlQUFlLENBQXJCOztBQUVBLFVBQU1DLFNBQVM7QUFDYkMsU0FBRztBQUNEQyxpQkFBUyxDQUFFLENBRFY7QUFFREMsaUJBQVMsQ0FBRSxDQUZWO0FBR0RSLHdCQUFnQlMsS0FBS0MsRUFBTCxHQUFVQyxrQkFBVixDQUE2QixNQUFNUCxZQUFuQztBQUhmO0FBRFUsS0FBZjs7QUFRQSxVQUFNUSxNQUFNO0FBQ1ZOLFNBQUc7QUFETyxLQUFaOztBQUlBTyxXQUFPYixlQUFlWSxHQUFmLEVBQW9CUCxNQUFwQixDQUFQLEVBQW9DUyxJQUFwQyxDQUF5Q1YsWUFBekM7QUFDQVMsV0FBT1IsT0FBT0MsQ0FBUCxDQUFTTixjQUFoQixFQUFnQ2UsVUFBaEM7QUFDRCxHQWpCRDs7QUFtQkFaLE9BQUssK0JBQUwsRUFBc0MsTUFBTTtBQUMxQyxVQUFNQyxlQUFlLENBQXJCOztBQUVBLFVBQU1DLFNBQVM7QUFDYkMsU0FBRztBQUNEQyxpQkFBUyxDQUFFLENBRFY7QUFFREMsaUJBQVMsQ0FBRSxDQUZWO0FBR0RSLHdCQUFnQlMsS0FBS0MsRUFBTCxHQUFVQyxrQkFBVixDQUE2QixNQUFNUCxZQUFuQztBQUhmLE9BRFU7QUFNYlksU0FBRztBQUNEQyxXQUFHO0FBQ0RWLG1CQUFTLENBQUUsQ0FEVjtBQUVEQyxtQkFBUyxDQUFFLENBRlY7QUFHRFIsMEJBQWdCUyxLQUFLQyxFQUFMLEdBQVVDLGtCQUFWLENBQTZCLE1BQU1QLFlBQW5DO0FBSGY7QUFERjtBQU5VLEtBQWY7O0FBZUEsVUFBTVEsTUFBTTtBQUNWTixTQUFHLENBRE87QUFFVlUsU0FBRztBQUNEQyxXQUFHO0FBREY7QUFGTyxLQUFaOztBQU9BSixXQUFPYixlQUFlWSxHQUFmLEVBQW9CUCxNQUFwQixDQUFQLEVBQW9DUyxJQUFwQyxDQUF5Q1YsZUFBZSxDQUF4RDtBQUNBUyxXQUFPUixPQUFPQyxDQUFQLENBQVNOLGNBQWhCLEVBQWdDa0Isd0JBQWhDLENBQXlETixJQUFJTixDQUE3RDtBQUNBTyxXQUFPUixPQUFPVyxDQUFQLENBQVNDLENBQVQsQ0FBV2pCLGNBQWxCLEVBQWtDa0Isd0JBQWxDLENBQTJETixJQUFJSSxDQUFKLENBQU1DLENBQWpFO0FBQ0QsR0E1QkQ7QUE2QkQsQ0FqREQiLCJmaWxlIjoiZW5jb2RpbmctbGVuZ3RoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB7IGVuY29kaW5nTGVuZ3RoIH0gPSByZXF1aXJlKCdsaWIvZW5jb2RpbmctbGVuZ3RoJyk7XG5cbmRlc2NyaWJlKCdlbmNvZGluZ0xlbmd0aCcsICgpID0+IHtcbiAgdGVzdCgnc2hvdWxkIHVzZSBzY2hlbWEnLCAoKSA9PiB7XG4gICAgY29uc3QgZXhwZWN0ZWRTaXplID0gNTtcblxuICAgIGNvbnN0IHNjaGVtYSA9IHtcbiAgICAgIGE6IHtcbiAgICAgICAgZW5jb2RlKCkge30sXG4gICAgICAgIGRlY29kZSgpIHt9LFxuICAgICAgICBlbmNvZGluZ0xlbmd0aDogamVzdC5mbigpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiBleHBlY3RlZFNpemUpLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgY29uc3Qgb2JqID0ge1xuICAgICAgYTogMSxcbiAgICB9O1xuXG4gICAgZXhwZWN0KGVuY29kaW5nTGVuZ3RoKG9iaiwgc2NoZW1hKSkudG9CZShleHBlY3RlZFNpemUpO1xuICAgIGV4cGVjdChzY2hlbWEuYS5lbmNvZGluZ0xlbmd0aCkudG9CZUNhbGxlZCgpO1xuICB9KTtcblxuICB0ZXN0KCdzaG91bGQgc3VwcG9ydCBuZXN0ZWQgc2NoZW1hcycsICgpID0+IHtcbiAgICBjb25zdCBleHBlY3RlZFNpemUgPSA1O1xuXG4gICAgY29uc3Qgc2NoZW1hID0ge1xuICAgICAgYToge1xuICAgICAgICBlbmNvZGUoKSB7fSxcbiAgICAgICAgZGVjb2RlKCkge30sXG4gICAgICAgIGVuY29kaW5nTGVuZ3RoOiBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+IGV4cGVjdGVkU2l6ZSksXG4gICAgICB9LFxuICAgICAgYjoge1xuICAgICAgICBjOiB7XG4gICAgICAgICAgZW5jb2RlKCkge30sXG4gICAgICAgICAgZGVjb2RlKCkge30sXG4gICAgICAgICAgZW5jb2RpbmdMZW5ndGg6IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4gZXhwZWN0ZWRTaXplKSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGNvbnN0IG9iaiA9IHtcbiAgICAgIGE6IDEsXG4gICAgICBiOiB7XG4gICAgICAgIGM6IDE1LFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgZXhwZWN0KGVuY29kaW5nTGVuZ3RoKG9iaiwgc2NoZW1hKSkudG9CZShleHBlY3RlZFNpemUgKiAyKTtcbiAgICBleHBlY3Qoc2NoZW1hLmEuZW5jb2RpbmdMZW5ndGgpLnRvSGF2ZUJlZW5MYXN0Q2FsbGVkV2l0aChvYmouYSk7XG4gICAgZXhwZWN0KHNjaGVtYS5iLmMuZW5jb2RpbmdMZW5ndGgpLnRvSGF2ZUJlZW5MYXN0Q2FsbGVkV2l0aChvYmouYi5jKTtcbiAgfSk7XG59KTtcbiJdfQ==