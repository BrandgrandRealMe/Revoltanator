c6ffa682c0a85a56b39ebfd404798e04
'use strict';

// Helps to "skip" field in result.

/* istanbul ignore next */var cov_2dz5hece5m = function () {
  var path = '/home/dtsvet/develop/projects/binary-data/src/node_modules/internal/symbols.js',
      hash = '42792c298bdc95224bb6023c2b608b9a4dc72ff0',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/home/dtsvet/develop/projects/binary-data/src/node_modules/internal/symbols.js',
    statementMap: {
      '0': {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 27
        }
      },
      '1': {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 29
        }
      },
      '2': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 12,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      '0': 0,
      '1': 0,
      '2': 0
    },
    f: {},
    b: {},
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const skip = /* istanbul ignore next */(cov_2dz5hece5m.s[0]++, Symbol('skip'));

// Private field `bytes` in Metadata.
const bytes = /* istanbul ignore next */(cov_2dz5hece5m.s[1]++, Symbol('bytes'));

/* istanbul ignore next */cov_2dz5hece5m.s[2]++;
module.exports = {
  skip,
  bytes
};